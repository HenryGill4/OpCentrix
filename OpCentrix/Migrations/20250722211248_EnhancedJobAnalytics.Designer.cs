// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpCentrix.Data;

#nullable disable

namespace OpCentrix.Migrations
{
    [DbContext(typeof(SchedulerContext))]
    [Migration("20250722211248_EnhancedJobAnalytics")]
    partial class EnhancedJobAnalytics
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("OpCentrix.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ActualEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ActualStart")
                        .HasColumnType("TEXT");

                    b.Property<double>("ChangeoverTimeMinutes")
                        .HasColumnType("REAL");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<DateTime?>("CustomerDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerOrderNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DefectQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("EnergyConsumptionKwh")
                        .HasColumnType("REAL");

                    b.Property<double>("EstimatedHours")
                        .HasColumnType("REAL");

                    b.Property<string>("HoldReason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRushJob")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("LaborCostPerHour")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("MachineId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double>("MachineUtilizationPercent")
                        .HasColumnType("REAL");

                    b.Property<decimal>("MaterialCostPerUnit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operator")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OverheadCostPerHour")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PartId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PreviousJobPartNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(3);

                    b.Property<string>("ProcessParameters")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("{}");

                    b.Property<int>("ProducedQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QualityCheckpoints")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("{}");

                    b.Property<string>("QualityInspector")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RequiredMaterials")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequiredSkills")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequiredTooling")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReworkQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ScheduledEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ScheduledStart")
                        .HasColumnType("TEXT");

                    b.Property<double>("SetupTimeMinutes")
                        .HasColumnType("REAL");

                    b.Property<string>("SpecialInstructions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Scheduled");

                    b.Property<string>("Supervisor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("PartId");

                    b.HasIndex("PartNumber");

                    b.HasIndex("ScheduledStart");

                    b.HasIndex("Status");

                    b.HasIndex("MachineId", "ScheduledStart");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("OpCentrix.Models.JobLogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MachineId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operator")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Action");

                    b.HasIndex("MachineId");

                    b.HasIndex("Timestamp");

                    b.ToTable("JobLogEntries");
                });

            modelBuilder.Entity("OpCentrix.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AverageActualHours")
                        .HasColumnType("REAL");

                    b.Property<double>("AverageDefectRate")
                        .HasColumnType("REAL");

                    b.Property<double>("AverageEfficiencyPercent")
                        .HasColumnType("REAL");

                    b.Property<double>("AverageQualityScore")
                        .HasColumnType("REAL");

                    b.Property<string>("AvgDuration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AvgDurationDays")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ChangeoverTimeMinutes")
                        .HasColumnType("REAL");

                    b.Property<string>("ConsumableMaterials")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("CustomerPartNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Dimensions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("EstimatedHours")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<DateTime?>("LastProduced")
                        .HasColumnType("TEXT");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MaterialCostPerUnit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PartCategory")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PartClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferredMachines")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessParameters")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("{}");

                    b.Property<string>("ProcessType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("QualityCheckpoints")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("{}");

                    b.Property<string>("QualityStandards")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequiredCertifications")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequiredMachineType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequiredSkills")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequiredTooling")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("RequiresInspection")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SetupCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<double>("SetupTimeMinutes")
                        .HasColumnType("REAL");

                    b.Property<decimal>("StandardLaborCostPerHour")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ToleranceRequirements")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ToolingCost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TotalJobsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalUnitsProduced")
                        .HasColumnType("INTEGER");

                    b.Property<double>("VolumeM3")
                        .HasColumnType("REAL");

                    b.Property<double>("WeightKg")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Material");

                    b.HasIndex("PartNumber")
                        .IsUnique();

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("OpCentrix.Models.Job", b =>
                {
                    b.HasOne("OpCentrix.Models.Part", "Part")
                        .WithMany("Jobs")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Part");
                });

            modelBuilder.Entity("OpCentrix.Models.Part", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
