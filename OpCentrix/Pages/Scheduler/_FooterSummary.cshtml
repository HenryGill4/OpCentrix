@model OpCentrix.Models.ViewModels.FooterSummaryViewModel
@{
    // Handle null model gracefully
    var model = Model ?? new OpCentrix.Models.ViewModels.FooterSummaryViewModel();
    var totalHours = model.TotalHours;
    var totalJobs = model.TotalJobs;
}

@if (model != null && (model.MachineHours.Any() || model.JobCounts.Any()))
{
    <div class="bg-white rounded-lg shadow-lg border border-gray-200 p-6">
        <div class="flex items-center justify-between mb-4">
            <h3 class="text-lg font-bold text-gray-800">Production Summary</h3>
            <div class="text-sm text-gray-600">
                Total: @totalJobs jobs, @totalHours.ToString("F1") hours
            </div>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Machine Hours Breakdown -->
            <div class="space-y-3">
                <h4 class="font-semibold text-gray-700 text-sm uppercase tracking-wide">Machine Hours</h4>
                @if (model.MachineHours.Any())
                {
                    @foreach (var machine in model.MachineHours.Keys.OrderBy(k => k))
                    {
                        var hours = model.MachineHours[machine];
                        var percentage = totalHours > 0 ? (hours / totalHours * 100) : 0;
                        
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-2">
                                <div class="w-3 h-3 rounded-full bg-indigo-600"></div>
                                <span class="text-sm font-medium text-gray-700">@machine</span>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-bold text-gray-900">@hours.ToString("F1")h</div>
                                <div class="text-xs text-gray-500">@percentage.ToString("F0")%</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-sm text-gray-500">No machine hours data</div>
                }
            </div>
            
            <!-- Job Count Breakdown -->
            <div class="space-y-3">
                <h4 class="font-semibold text-gray-700 text-sm uppercase tracking-wide">Job Count</h4>
                @if (model.JobCounts.Any())
                {
                    @foreach (var machine in model.JobCounts.Keys.OrderBy(k => k))
                    {
                        var count = model.JobCounts[machine];
                        var percentage = totalJobs > 0 ? (count / (double)totalJobs * 100) : 0;
                        
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-2">
                                <div class="w-3 h-3 rounded-full bg-green-600"></div>
                                <span class="text-sm font-medium text-gray-700">@machine</span>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-bold text-gray-900">@count</div>
                                <div class="text-xs text-gray-500">@percentage.ToString("F0")%</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-sm text-gray-500">No job count data</div>
                }
            </div>
            
            <!-- Quick Actions -->
            <div class="space-y-3">
                <h4 class="font-semibold text-gray-700 text-sm uppercase tracking-wide">Quick Actions</h4>
                <div class="space-y-2">
                    <button class="w-full text-left px-3 py-2 text-sm bg-gray-50 hover:bg-gray-100 rounded-lg transition"
                            onclick="window.location.href='/Analytics'">
                        ?? View Analytics
                    </button>
                    <button class="w-full text-left px-3 py-2 text-sm bg-gray-50 hover:bg-gray-100 rounded-lg transition"
                            onclick="window.location.href='/Scheduler/JobLog'">
                        ?? Job Log
                    </button>
                    <button class="w-full text-left px-3 py-2 text-sm bg-gray-50 hover:bg-gray-100 rounded-lg transition"
                            onclick="window.location.reload()">
                        ?? Refresh
                    </button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="bg-white rounded-lg shadow-lg border border-gray-200 p-6">
        <div class="text-center text-gray-500">
            <h3 class="text-lg font-bold text-gray-800 mb-2">Production Summary</h3>
            <p>No production data available. Schedule some jobs to see summary.</p>
        </div>
    </div>
}
