@model OpCentrix.Models.ViewModels.MachineRowViewModel
@{
    var start = Model.Dates.First();
    int current = 0;
    var jobs = Model.Jobs.OrderBy(j => j.ScheduledStart).ToList();
}
<div class="grid grid-cols-@Model.Dates.Count">
@foreach (var job in jobs)
{
    var index = (job.ScheduledStart.Date - start.Date).Days;
    if (index > current)
    {
        for (int i = current; i < index && i < Model.Dates.Count; i++)
        {
            var day = start.AddDays(i);
            <div class="relative border h-20">
                <button class="absolute bottom-1 right-1 text-xs text-gray-500 hover:text-indigo-600"
                        hx-get="/Scheduler/ShowAddModal?machineId=@Model.MachineId&date=@day.ToString("yyyy-MM-dd")"
                        hx-target="#modal-content" hx-swap="innerHTML">
                    + Add Job
                </button>
            </div>
        }
        current = index;
    }
    if (index >= Model.Dates.Count) { break; }
    var span = Math.Min((job.ScheduledEnd.Date - job.ScheduledStart.Date).Days + 1, Model.Dates.Count - index);
    <div class="relative border h-20 col-span-@span">
        <partial name="_JobBlock" model="job" />
    </div>
    current = index + span;
}
@for (int i = current; i < Model.Dates.Count; i++)
{
    var day = start.AddDays(i);
    <div class="relative border h-20">
        <button class="absolute bottom-1 right-1 text-xs text-gray-500 hover:text-indigo-600"
                hx-get="/Scheduler/ShowAddModal?machineId=@Model.MachineId&date=@day.ToString("yyyy-MM-dd")"
                hx-target="#modal-content" hx-swap="innerHTML">
            + Add Job
        </button>
    </div>
}
</div>
