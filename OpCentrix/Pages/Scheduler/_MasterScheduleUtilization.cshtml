@model List<OpCentrix.ViewModels.Analytics.ResourceUtilization>

@{
    var resources = Model ?? new List<OpCentrix.ViewModels.Analytics.ResourceUtilization>();
}

@if (!resources.Any())
{
    <div class="text-center py-8 text-gray-500">
        <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
        </svg>
        <p>No utilization data available.</p>
    </div>
}
else
{
    <div class="space-y-4">
        @foreach (var resource in resources)
        {
            <div class="bg-gray-50 rounded-lg p-4">
                <div class="flex justify-between items-center mb-3">
                    <div>
                        <h4 class="font-semibold text-gray-900">@resource.ResourceName</h4>
                        <p class="text-sm text-gray-600">@(string.IsNullOrEmpty(resource.ResourceType) ? "Resource" : char.ToUpper(resource.ResourceType[0]) + resource.ResourceType.Substring(1).ToLower())</p>
                    </div>
                    <div class="text-right">
                        <div class="text-lg font-bold @(resource.UtilizationPercent > 100 ? "text-red-600" : resource.UtilizationPercent > 80 ? "text-green-600" : "text-blue-600")">
                            @resource.UtilizationPercent.ToString("F1")%
                        </div>
                        <div class="text-xs text-gray-500">@resource.UtilizationStatus</div>
                    </div>
                </div>
                
                <!-- Utilization Bar -->
                <div class="w-full bg-gray-200 rounded-full h-3 mb-3">
                    <div class="h-3 rounded-full transition-all duration-300 @(resource.UtilizationPercent > 100 ? "bg-red-500" : resource.UtilizationPercent > 80 ? "bg-green-500" : "bg-blue-500")" 
                         style="width: @Math.Min(100, resource.UtilizationPercent)%"></div>
                </div>
                
                <!-- Usage Details -->
                <div class="grid grid-cols-3 gap-4 text-sm">
                    <div class="text-center">
                        <div class="font-semibold text-gray-900">@resource.UsedHours.ToString("F1")h</div>
                        <div class="text-gray-500">Used</div>
                    </div>
                    <div class="text-center">
                        <div class="font-semibold text-gray-900">@resource.AvailableHours.ToString("F1")h</div>
                        <div class="text-gray-500">Available</div>
                    </div>
                    <div class="text-center">
                        <div class="font-semibold text-gray-900">@resource.CapacityHours.ToString("F1")h</div>
                        <div class="text-gray-500">Capacity</div>
                    </div>
                </div>
                
                <!-- Daily Utilization Chart (simplified) -->
                @if (resource.DailyUtilization.Any())
                {
                    <div class="mt-4">
                        <h5 class="text-sm font-medium text-gray-700 mb-2">Daily Utilization (Last 7 Days)</h5>
                        <div class="flex items-end space-x-1 h-16">
                            @foreach (var dataPoint in resource.DailyUtilization.TakeLast(7))
                            {
                                var barHeight = Math.Max(4, (int)(dataPoint.UtilizationPercent / 100 * 60));
                                <div class="flex-1 bg-blue-300 rounded-t" 
                                     style="height: @(barHeight)px" 
                                     title="@dataPoint.Date.ToString("MMM dd"): @dataPoint.UtilizationPercent.ToString("F1")%"></div>
                            }
                        </div>
                        <div class="flex justify-between text-xs text-gray-500 mt-1">
                            <span>@resource.DailyUtilization.TakeLast(7).First().Date.ToString("MMM dd")</span>
                            <span>@resource.DailyUtilization.TakeLast(7).Last().Date.ToString("MMM dd")</span>
                        </div>
                    </div>
                }
                
                <!-- Alerts for over/under utilization -->
                @if (resource.IsOverUtilized)
                {
                    <div class="mt-3 p-2 bg-red-50 border border-red-200 rounded text-sm text-red-700">
                        <strong>Over-utilized:</strong> Resource is operating beyond capacity. Consider load balancing.
                    </div>
                }
                else if (resource.IsUnderUtilized)
                {
                    <div class="mt-3 p-2 bg-yellow-50 border border-yellow-200 rounded text-sm text-yellow-700">
                        <strong>Under-utilized:</strong> Resource has significant unused capacity available.
                    </div>
                }
            </div>
        }
    </div>
    
    <!-- Utilization Summary -->
    <div class="mt-6 bg-white border border-gray-200 rounded-lg p-4">
        <h4 class="font-semibold text-gray-900 mb-3">Utilization Summary</h4>
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
            <div>
                <div class="text-lg font-bold text-green-600">@resources.Count(r => r.UtilizationPercent >= 70 && r.UtilizationPercent <= 95)</div>
                <div class="text-sm text-gray-600">Optimal</div>
            </div>
            <div>
                <div class="text-lg font-bold text-red-600">@resources.Count(r => r.IsOverUtilized)</div>
                <div class="text-sm text-gray-600">Over-utilized</div>
            </div>
            <div>
                <div class="text-lg font-bold text-yellow-600">@resources.Count(r => r.IsUnderUtilized)</div>
                <div class="text-sm text-gray-600">Under-utilized</div>
            </div>
            <div>
                <div class="text-lg font-bold text-blue-600">@resources.Average(r => r.UtilizationPercent).ToString("F1")%</div>
                <div class="text-sm text-gray-600">Average</div>
            </div>
        </div>
    </div>
}