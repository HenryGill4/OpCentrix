@model OpCentrix.Models.Part

<form id="partForm" method="post" 
      hx-post="/Admin/Parts?handler=Save" 
      hx-trigger="submit"
      hx-target="this" 
      hx-swap="outerHTML"
      hx-on::before-request="console.log('🎯 [FORM] Submitting part form to:', event.detail.elt.getAttribute('hx-post')); console.log('🎯 [FORM] Form data:', new FormData(event.detail.elt)); OpCentrixAdmin.Loading.show(document.getElementById('submitBtn'));"
      hx-on::after-swap="console.log('🎯 [FORM] Form response received'); handlePartFormResponse(event);"
      hx-on::response-error="console.error('❌ [FORM] Submission error:', event.detail); OpCentrixAdmin.Alert.error('Form submission failed. Please try again.');"
      enctype="application/x-www-form-urlencoded">
    
    <!-- Modal Header -->
    <div class="flex items-center justify-between p-6 border-b border-gray-200">
        <h2 class="text-xl font-bold text-gray-900">
            @(Model.Id == 0 ? "Add New Part" : $"Edit Part: {Model.PartNumber}")
        </h2>
        <button type="button" onclick="OpCentrixAdmin.Modal.hide('modal-container')" class="text-gray-400 hover:text-gray-600">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
        </button>
    </div>

    <!-- Display validation errors if any -->
    @if (ViewData["ValidationErrors"] is List<string> errors && errors.Any())
    {
        <div class="mx-6 mt-4 p-4 bg-red-50 border border-red-200 rounded-lg">
            <div class="flex">
                <svg class="w-5 h-5 text-red-400 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                </svg>
                <div>
                    <h3 class="text-sm font-medium text-red-800">Please correct the following errors:</h3>
                    <ul class="mt-2 text-sm text-red-700">
                        @foreach (var error in errors)
                        {
                            <li>• @error</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }

    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="CreatedDate" />
    <input type="hidden" asp-for="CreatedBy" />
    <!-- CRITICAL FIX: Add hidden handler field to ensure proper routing -->
    <input type="hidden" name="handler" value="Save" />
    @Html.AntiForgeryToken()
    
    <div class="p-6 max-h-[70vh] overflow-y-auto">
        <!-- Basic Information Section -->
        <div class="bg-blue-50 rounded-lg p-4 mb-6">
            <h3 class="text-lg font-semibold text-blue-900 mb-4 flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Basic Information
            </h3>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label asp-for="PartNumber" class="block text-sm font-medium text-gray-700 mb-1">
                        Part Number <span class="text-red-500">*</span>
                    </label>
                    <input asp-for="PartNumber" type="text" placeholder="XX-XXXX (e.g., 14-5396)" required
                           onblur="window.validatePartNumber && window.validatePartNumber(this.value)"
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
                    <span asp-validation-for="PartNumber" class="text-red-500 text-sm"></span>
                    <div id="partNumberValidation" class="text-xs mt-1 hidden"></div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                    <select asp-for="IsActive" class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                </div>
                
                <div>
                    <label asp-for="Name" class="block text-sm font-medium text-gray-700 mb-1">
                        Part Name <span class="text-red-500">*</span>
                    </label>
                    <input asp-for="Name" type="text" placeholder="Enter part name..." required
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
                    <span asp-validation-for="Name" class="text-red-500 text-sm"></span>
                    <p class="text-xs text-gray-500 mt-1">Descriptive name for the part</p>
                </div>
                
                <div>
                    <label asp-for="CustomerPartNumber" class="block text-sm font-medium text-gray-700 mb-1">
                        Customer Part Number
                    </label>
                    <input asp-for="CustomerPartNumber" type="text" placeholder="Customer's part number..."
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
                    <span asp-validation-for="CustomerPartNumber" class="text-red-500 text-sm"></span>
                    <p class="text-xs text-gray-500 mt-1">Optional customer reference</p>
                </div>
                
                <div class="md:col-span-2">
                    <label asp-for="Description" class="block text-sm font-medium text-gray-700 mb-1">
                        Description <span class="text-red-500">*</span>
                    </label>
                    <textarea asp-for="Description" placeholder="Enter detailed part description..." required rows="3"
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"></textarea>
                    <span asp-validation-for="Description" class="text-red-500 text-sm"></span>
                    <p class="text-xs text-gray-500 mt-1">Detailed description of the part's purpose and features</p>
                </div>
            </div>
        </div>

        <!-- Material Selection Section - FIXED AUTO-FILL -->
        <div class="bg-green-50 rounded-lg p-4 mb-6">
            <h3 class="text-lg font-semibold text-green-900 mb-4 flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 7.586V5L8 4z"></path>
                </svg>
                Material & SLS Configuration
            </h3>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Material Type <span class="text-red-500">*</span></label>
                    <select asp-for="Material" id="materialSelect" onchange="updateSlsMaterial()" required
                            class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-green-500 focus:border-green-500">
                        <option value="">Select material...</option>
                        <optgroup label="Titanium Alloys">
                            <option value="Ti-6Al-4V Grade 5">Ti-6Al-4V Grade 5 (Standard)</option>
                            <option value="Ti-6Al-4V ELI Grade 23">Ti-6Al-4V ELI Grade 23 (Medical)</option>
                            <option value="Ti-6Al-4V Grade 23">Ti-6Al-4V Grade 23</option>
                            <option value="CP Titanium Grade 1">CP Titanium Grade 1</option>
                            <option value="CP Titanium Grade 2">CP Titanium Grade 2</option>
                        </optgroup>
                        <optgroup label="Inconel Alloys">
                            <option value="Inconel 718">Inconel 718 (High Temperature)</option>
                            <option value="Inconel 625">Inconel 625 (Corrosion Resistant)</option>
                            <option value="Inconel 939">Inconel 939</option>
                        </optgroup>
                        <optgroup label="Stainless Steel">
                            <option value="316L Stainless Steel">316L Stainless Steel</option>
                            <option value="17-4 PH Stainless Steel">17-4 PH Stainless Steel</option>
                            <option value="15-5 PH Stainless Steel">15-5 PH Stainless Steel</option>
                        </optgroup>
                        <optgroup label="Tool Steel">
                            <option value="Maraging Steel 18Ni300">Maraging Steel 18Ni300</option>
                            <option value="H13 Tool Steel">H13 Tool Steel</option>
                        </optgroup>
                        <optgroup label="Aluminum Alloys">
                            <option value="AlSi10Mg">AlSi10Mg</option>
                            <option value="AlSi7Mg">AlSi7Mg</option>
                        </optgroup>
                        <optgroup label="Other">
                            <option value="Custom">Custom Material</option>
                        </optgroup>
                    </select>
                    <span asp-validation-for="Material" class="text-red-500 text-sm"></span>
                </div>
                
                <div>
                    <label asp-for="SlsMaterial" class="block text-sm font-medium text-gray-700 mb-1">SLS Material <span class="text-red-500">*</span></label>
                    <input asp-for="SlsMaterial" id="slsMaterialInput" type="text" required
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-green-500 focus:border-green-500 bg-gray-50" 
                           readonly />
                    <span asp-validation-for="SlsMaterial" class="text-red-500 text-sm"></span>
                    <p class="text-xs text-gray-500 mt-1">Auto-filled based on material selection</p>
                </div>
            </div>
            
            <!-- ENHANCED SLS PARAMETERS SECTION -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                <div>
                    <label asp-for="RecommendedLaserPower" class="block text-sm font-medium text-gray-700 mb-1">
                        Laser Power (W)
                    </label>
                    <input asp-for="RecommendedLaserPower" id="laserPowerInput" type="number" step="1" min="0" max="500" 
                           placeholder="200" class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-green-500 focus:border-green-500" />
                    <p class="text-xs text-gray-500 mt-1">Auto-fills based on material</p>
                </div>
                
                <div>
                    <label asp-for="RecommendedScanSpeed" class="block text-sm font-medium text-gray-700 mb-1">
                        Scan Speed (mm/s)
                    </label>
                    <input asp-for="RecommendedScanSpeed" id="scanSpeedInput" type="number" step="10" min="0" max="5000" 
                           placeholder="1200" class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-green-500 focus:border-green-500" />
                    <p class="text-xs text-gray-500 mt-1">Auto-fills based on material</p>
                </div>
                
                <div>
                    <label asp-for="RecommendedBuildTemperature" class="block text-sm font-medium text-gray-700 mb-1">
                        Build Temperature (°C)
                    </label>
                    <input asp-for="RecommendedBuildTemperature" id="buildTemperatureInput" type="number" step="1" min="0" max="500" 
                           placeholder="180" class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-green-500 focus:border-green-500" />
                    <p class="text-xs text-gray-500 mt-1">Auto-fills based on material</p>
                </div>
            </div>
        </div>

        <!-- Duration & Time Estimates Section -->
        <div class="bg-yellow-50 rounded-lg p-4 mb-6">
            <h3 class="text-lg font-semibold text-yellow-900 mb-4 flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Duration & Time Estimates
            </h3>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                <div>
                    <label asp-for="EstimatedHours" class="block text-sm font-medium text-gray-700 mb-1">
                        Standard Duration (Hours) <span class="text-red-500">*</span>
                    </label>
                    <input asp-for="EstimatedHours" id="estimatedHoursInput" type="number" step="0.25" min="0.25" max="200" 
                           placeholder="8.5" onchange="window.updateDurationDisplay && window.updateDurationDisplay()" required
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500" />
                    <span asp-validation-for="EstimatedHours" class="text-red-500 text-sm"></span>
                    <p class="text-xs text-gray-500 mt-1">Auto-fills based on material complexity</p>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Duration Display</label>
                    <input asp-for="AvgDuration" id="durationDisplay" type="text" readonly
                           class="w-full border border-gray-300 rounded-lg p-2 bg-gray-50 text-gray-600" />
                    <p class="text-xs text-gray-500 mt-1">Formatted for display (auto-calculated)</p>
                </div>
                
                <div>
                    <label asp-for="AvgDurationDays" class="block text-sm font-medium text-gray-700 mb-1">Duration Days</label>
                    <input asp-for="AvgDurationDays" id="durationDays" type="number" readonly
                           class="w-full border border-gray-300 rounded-lg p-2 bg-gray-50 text-gray-600" />
                    <p class="text-xs text-gray-500 mt-1">Whole days (auto-calculated)</p>
                </div>
            </div>

            <!-- Task 7: Admin Duration Override Section -->
            <div class="border-t border-yellow-200 pt-4">
                <div class="flex items-center justify-between mb-3">
                    <h4 class="text-md font-semibold text-yellow-800 flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
                        </svg>
                        Admin Duration Override
                    </h4>
                    <span class="text-xs text-yellow-600 bg-yellow-100 px-2 py-1 rounded-full">
                        @(Model.HasAdminOverride ? "Override Active" : "No Override")
                    </span>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label asp-for="AdminEstimatedHoursOverride" class="block text-sm font-medium text-gray-700 mb-1">
                            Override Duration (Hours)
                        </label>
                        <input asp-for="AdminEstimatedHoursOverride" type="number" step="0.25" min="0.25" max="200" 
                               placeholder="Leave empty for no override" onchange="window.updateOverrideDisplay && window.updateOverrideDisplay()"
                               class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500" />
                        <span asp-validation-for="AdminEstimatedHoursOverride" class="text-red-500 text-sm"></span>
                        <p class="text-xs text-gray-500 mt-1">Overrides standard duration when set</p>
                    </div>
                    
                    <div>
                        <label asp-for="AdminOverrideReason" class="block text-sm font-medium text-gray-700 mb-1">
                            Override Reason
                        </label>
                        <input asp-for="AdminOverrideReason" type="text" maxlength="500" 
                               placeholder="Reason for duration override..."
                               class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500" />
                        <span asp-validation-for="AdminOverrideReason" class="text-red-500 text-sm"></span>
                        <p class="text-xs text-gray-500 mt-1">Required when override is set</p>
                    </div>
                </div>
                
                <!-- Override Status Display -->
                <div id="overrideStatus" class="mt-3 p-3 rounded-lg @(Model.HasAdminOverride ? "bg-orange-50 border border-orange-200" : "hidden")">
                    <div class="flex items-start space-x-2">
                        <svg class="w-5 h-5 text-orange-500 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 6.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                        <div>
                            <p class="text-sm font-medium text-orange-800">Duration Override Active</p>
                            @if (Model.HasAdminOverride)
                            {
                                <p class="text-xs text-orange-600 mt-1">
                                    Effective Duration: @Model.EffectiveDurationHours.ToString("F1") hours
                                    @if (!string.IsNullOrEmpty(Model.AdminOverrideBy))
                                    {
                                        <br />
                                        <text>Override by: @Model.AdminOverrideBy</text>
                                    }
                                    @if (Model.AdminOverrideDate.HasValue)
                                    {
                                        <br />
                                        <text>Override date: @Model.AdminOverrideDate.Value.ToString("yyyy-MM-dd HH:mm")</text>
                                    }
                                </p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Cost Information Section -->
        <div class="bg-red-50 rounded-lg p-4 mb-6">
            <h3 class="text-lg font-semibold text-red-900 mb-4 flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                </svg>
                Cost Information
            </h3>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                    <label asp-for="MaterialCostPerKg" class="block text-sm font-medium text-gray-700 mb-1">Material Cost ($/kg)</label>
                    <input asp-for="MaterialCostPerKg" id="materialCostInput" type="number" step="0.01" min="0" placeholder="450.00" 
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-red-500 focus:border-red-500" />
                    <p class="text-xs text-gray-500 mt-1">Auto-fills based on material</p>
                </div>
                
                <div>
                    <label asp-for="StandardLaborCostPerHour" class="block text-sm font-medium text-gray-700 mb-1">Labor Cost ($/hr)</label>
                    <input asp-for="StandardLaborCostPerHour" type="number" step="0.01" min="0" placeholder="85.00" 
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-red-500 focus:border-red-500" />
                </div>
                
                <div>
                    <label asp-for="SetupCost" class="block text-sm font-medium text-gray-700 mb-1">Setup Cost ($)</label>
                    <input asp-for="SetupCost" type="number" step="0.01" min="0" placeholder="125.00" 
                           class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-red-500 focus:border-red-500" />
                </div>
            </div>
        </div>

        <!-- Classification Section -->
        <div class="bg-gray-50 rounded-lg p-4">
            <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                </svg>
                Classification & Industry
            </h3>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <div>
                    <label asp-for="Industry" class="block text-sm font-medium text-gray-700 mb-1">
                        Industry <span class="text-red-500">*</span>
                    </label>
                    <select asp-for="Industry" required class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-gray-500 focus:border-gray-500">
                        <option value="General" selected="@(string.IsNullOrEmpty(Model.Industry) || Model.Industry == "General")">General Manufacturing</option>
                        <option value="Aerospace">Aerospace</option>
                        <option value="Medical">Medical</option>
                        <option value="Automotive">Automotive</option>
                        <option value="Oil & Gas">Oil & Gas</option>
                        <option value="Defense">Defense</option>
                        <option value="Energy">Energy</option>
                    </select>
                    <span asp-validation-for="Industry" class="text-red-500 text-sm"></span>
                </div>
                
                <div>
                    <label asp-for="Application" class="block text-sm font-medium text-gray-700 mb-1">
                        Application <span class="text-red-500">*</span>
                    </label>
                    <select asp-for="Application" required class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-gray-500 focus:border-gray-500">
                        <option value="General Component" selected="@(string.IsNullOrEmpty(Model.Application) || Model.Application == "General Component")">General Component</option>
                        <option value="Turbine Blade">Turbine Blade</option>
                        <option value="Structural Bracket">Structural Bracket</option>
                        <option value="Heat Exchanger">Heat Exchanger</option>
                        <option value="Valve Body">Valve Body</option>
                        <option value="Hip Implant">Hip Implant</option>
                        <option value="Surgical Instrument">Surgical Instrument</option>
                        <option value="Suspension Component">Suspension Component</option>
                        <option value="UAV Frame">UAV Frame</option>
                        <option value="Engine Component">Engine Component</option>
                        <option value="Pump Housing">Pump Housing</option>
                        <option value="Manifold">Manifold</option>
                        <option value="Nozzle">Nozzle</option>
                        <option value="Custom Component">Custom Component</option>
                    </select>
                    <span asp-validation-for="Application" class="text-red-500 text-sm"></span>
                </div>
                
                <div>
                    <label asp-for="PartCategory" class="block text-sm font-medium text-gray-700 mb-1">Category</label>
                    <select asp-for="PartCategory" class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-gray-500 focus:border-gray-500">
                        <option value="">Select category...</option>
                        <option value="Production">Production</option>
                        <option value="Prototype">Prototype</option>
                        <option value="Tooling">Tooling</option>
                        <option value="Repair">Repair</option>
                    </select>
                </div>
                
                <div>
                    <label asp-for="PartClass" class="block text-sm font-medium text-gray-700 mb-1">Part Class</label>
                    <select asp-for="PartClass" class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-gray-500 focus:border-gray-500">
                        <option value="">Select class...</option>
                        <option value="A">Class A (Critical)</option>
                        <option value="B">Class B (Important)</option>
                        <option value="C">Class C (Standard)</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Footer -->
    <div class="flex items-center justify-end px-6 py-4 border-t border-gray-200 space-x-3">
        <button type="button" onclick="OpCentrixAdmin.Modal.hide('modal-container')" 
                class="bg-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-400 transition">
            Cancel
        </button>
        <button type="submit" id="submitBtn" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition">
            <span class="submit-text">@(Model.Id == 0 ? "Create Part" : "Update Part")</span>
            <span class="submit-loading hidden ml-2">
                <svg class="animate-spin h-4 w-4 text-white inline" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Saving...
            </span>
        </button>
    </div>
</form>

<script>
    // FIXED Part Form functions - Complete Auto-Fill Logic Implementation
    (function() {
        'use strict';
        
        console.log('🔧 [FORM] Part form script loading with FIXED auto-fill logic...');

        // ENHANCED: Material-specific defaults with ALL parameters
        const MATERIAL_DEFAULTS = {
            'Inconel 718': {
                laserPower: 285,
                scanSpeed: 960,
                buildTemperature: 200,
                materialCost: 750.00,
                estimatedHours: 12.0,
                complexityMultiplier: 1.5
            },
            'Inconel 625': {
                laserPower: 275,
                scanSpeed: 980,
                buildTemperature: 195,
                materialCost: 850.00,
                estimatedHours: 14.0,
                complexityMultiplier: 1.7
            },
            'Ti-6Al-4V Grade 5': {
                laserPower: 200,
                scanSpeed: 1200,
                buildTemperature: 180,
                materialCost: 450.00,
                estimatedHours: 8.0,
                complexityMultiplier: 1.0
            },
            '316L Stainless Steel': {
                laserPower: 240,
                scanSpeed: 1100,
                buildTemperature: 170,
                materialCost: 280.00,
                estimatedHours: 6.0,
                complexityMultiplier: 0.8
            }
        };
        
        // GLOBAL FUNCTION DEFINITIONS - Available for inline event handlers
        window.updateSlsMaterial = function() {
            console.log('🔧 [FORM] updateSlsMaterial called - FIXED VERSION');
            
            const materialSelect = document.getElementById('materialSelect');
            const slsMaterialInput = document.getElementById('slsMaterialInput');
            
            if (!materialSelect || !slsMaterialInput) {
                console.error('❌ [FORM] Material form elements not found');
                return false;
            }
            
            try {
                const materialType = materialSelect.value;
                
                if (materialType && materialType !== '') {
                    // Set SlsMaterial to match selected Material
                    slsMaterialInput.value = materialType;
                    console.log('✅ [FORM] SLS Material updated to:', materialType);
                    
                    // Auto-adjust ALL defaults based on material type
                    updateMaterialDefaults(materialType);
                } else {
                    slsMaterialInput.value = '';
                    console.log('🔧 [FORM] SLS Material cleared');
                }
                return true;
            } catch (error) {
                console.error('❌ [FORM] Error updating SLS material:', error);
                return false;
            }
        };
        
        // Enhanced material defaults update
        window.updateMaterialDefaults = function(materialType) {
            console.log('🔧 [FORM] Updating defaults for material:', materialType);
            
            const defaults = MATERIAL_DEFAULTS[materialType];
            if (!defaults) {
                console.log('ℹ️ [FORM] No specific defaults for material:', materialType);
                return;
            }
            
            // Update form fields with material-specific defaults
            const fieldUpdates = [
                { 
                    selector: '#estimatedHoursInput, input[name="EstimatedHours"]', 
                    value: defaults.estimatedHours, 
                    name: 'Estimated Hours'
                },
                { 
                    selector: '#materialCostInput, input[name="MaterialCostPerKg"]', 
                    value: defaults.materialCost, 
                    name: 'Material Cost'
                },
                { 
                    selector: '#laserPowerInput, input[name="RecommendedLaserPower"]', 
                    value: defaults.laserPower, 
                    name: 'Laser Power'
                },
                { 
                    selector: '#scanSpeedInput, input[name="RecommendedScanSpeed"]', 
                    value: defaults.scanSpeed, 
                    name: 'Scan Speed'
                },
                { 
                    selector: '#buildTemperatureInput, input[name="RecommendedBuildTemperature"]', 
                    value: defaults.buildTemperature, 
                    name: 'Build Temperature'
                }
            ];
            
            let updateCount = 0;
            fieldUpdates.forEach(update => {
                const element = document.querySelector(update.selector);
                if (element) {
                    element.value = update.value;
                    updateCount++;
                    console.log(`✅ [FORM] Updated ${update.name} to: ${update.value}`);
                    
                    // Trigger change event for fields that have onchange handlers
                    if (element.onchange) {
                        element.onchange();
                    }
                }
            });
            
            if (updateCount > 0) {
                console.log(`✅ [FORM] Applied ${updateCount} material-specific defaults for ${materialType}`);
                // Update duration display if hours were changed
                if (window.updateDurationDisplay) {
                    updateDurationDisplay();
                }
            }
        };
        
        // Duration display update function
        window.updateDurationDisplay = function() {
            const hoursInput = document.querySelector('#estimatedHoursInput, input[name="EstimatedHours"]');
            const durationDisplay = document.getElementById('durationDisplay');
            const durationDays = document.getElementById('durationDays');
            
            if (!hoursInput || !durationDisplay || !durationDays) {
                return false;
            }
            
            const hours = parseFloat(hoursInput.value) || 0;
            
            if (hours > 0) {
                const days = Math.floor(hours / 24);
                const remainingHours = hours % 24;
                
                if (days > 0) {
                    durationDisplay.value = `${days}d ${remainingHours.toFixed(1)}h`;
                } else {
                    durationDisplay.value = `${hours.toFixed(1)}h`;
                }
                
                durationDays.value = Math.ceil(hours / 8);
            } else {
                durationDisplay.value = '';
                durationDays.value = '';
            }
            
            return true;
        };
        
        // Admin Override Display Update
        window.updateOverrideDisplay = function() {
            const overrideInput = document.querySelector('input[name="AdminEstimatedHoursOverride"]');
            const overrideReasonInput = document.querySelector('input[name="AdminOverrideReason"]');
            const overrideStatus = document.getElementById('overrideStatus');
            
            if (!overrideInput) return false;
            
            const overrideHours = parseFloat(overrideInput.value) || 0;
            const hasOverride = overrideHours > 0;
            
            // Show/hide override status section
            if (overrideStatus) {
                if (hasOverride) {
                    overrideStatus.classList.remove('hidden');
                    overrideStatus.className = 'mt-3 p-3 rounded-lg bg-orange-50 border border-orange-200';
                } else {
                    overrideStatus.classList.add('hidden');
                }
            }
            
            // Make override reason required when override is set
            if (overrideReasonInput) {
                if (hasOverride) {
                    overrideReasonInput.setAttribute('required', 'required');
                    overrideReasonInput.placeholder = 'Reason for override is required';
                } else {
                    overrideReasonInput.removeAttribute('required');
                    overrideReasonInput.placeholder = 'Reason for duration override...';
                }
            }
            
            return true;
        };
        
        // Initialize form when loaded
        function initializeForm() {
            console.log('🔧 [FORM] Initializing part form...');
            
            setTimeout(() => {
                const materialSelect = document.getElementById('materialSelect');
                const hoursInput = document.querySelector('#estimatedHoursInput, input[name="EstimatedHours"]');
                
                // Update SLS material if material is pre-selected
                if (materialSelect && materialSelect.value) {
                    updateSlsMaterial();
                }
                
                // Update duration if hours are pre-filled
                if (hoursInput && hoursInput.value) {
                    updateDurationDisplay();
                }
                
                // Update override display
                updateOverrideDisplay();
                
                console.log('✅ [FORM] Form initialization complete');
            }, 300);
        }
        
        // Initialize when DOM is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initializeForm);
        } else {
            initializeForm();
        }
        
        console.log('✅ [FORM] Part form script loaded successfully');
        
    })();
</script>