@page
@model OpCentrix.Pages.Admin.BugReportsModel
@{
    ViewData["Title"] = "Bug Reports Management";
    Layout = "~/Pages/Admin/Shared/_AdminLayout.cshtml";
}

<div class="mb-8">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-3xl font-bold text-gray-900">Bug Reports Management</h1>
            <p class="text-gray-600 mt-2">View and manage bug reports submitted from all OpCentrix pages</p>
        </div>
        <div class="flex space-x-3">
            <a asp-page-handler="Export" asp-route-format="json" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition">
                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z"></path>
                </svg>
                Export JSON
            </a>
            <a asp-page-handler="Export" asp-route-format="csv" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition">
                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                Export CSV
            </a>
        </div>
    </div>
</div>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6" role="alert">
        <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span>@TempData["SuccessMessage"]</span>
        </div>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6" role="alert">
        <div class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span>@TempData["ErrorMessage"]</span>
        </div>
    </div>
}

<!-- Statistics Dashboard -->
<div class="bg-gradient-to-r from-red-500 to-pink-600 rounded-lg shadow-lg p-6 mb-8 text-white">
    <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-4">
        <div class="text-center">
            <div class="text-3xl font-bold">@Model.Statistics.TotalBugs</div>
            <div class="text-sm opacity-90">Total Bugs</div>
        </div>
        <div class="text-center">
            <div class="text-3xl font-bold">@Model.Statistics.NewBugs</div>
            <div class="text-sm opacity-90">New</div>
        </div>
        <div class="text-center">
            <div class="text-3xl font-bold">@Model.Statistics.InProgressBugs</div>
            <div class="text-sm opacity-90">In Progress</div>
        </div>
        <div class="text-center">
            <div class="text-3xl font-bold">@Model.Statistics.ResolvedBugs</div>
            <div class="text-sm opacity-90">Resolved</div>
        </div>
        <div class="text-center">
            <div class="text-3xl font-bold">@Model.Statistics.CriticalBugs</div>
            <div class="text-sm opacity-90">Critical</div>
        </div>
        <div class="text-center">
            <div class="text-3xl font-bold">@Model.Statistics.HighPriorityBugs</div>
            <div class="text-sm opacity-90">High Priority</div>
        </div>
        <div class="text-center">
            <div class="text-3xl font-bold">@Model.Statistics.BugsThisWeek</div>
            <div class="text-sm opacity-90">This Week</div>
        </div>
        <div class="text-center">
            <div class="text-3xl font-bold">@Math.Round(Model.Statistics.AverageResolutionDays, 1)</div>
            <div class="text-sm opacity-90">Avg Resolution (days)</div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="bg-white rounded-lg shadow-lg p-6 mb-8">
    <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path>
        </svg>
        Filters
    </h3>
    
    <form method="get" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6 gap-4">
        <div>
            <label for="searchTerm" class="block text-sm font-medium text-gray-700 mb-1">Search</label>
            <input asp-for="Filter.SearchTerm" type="text" class="w-full border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500" placeholder="Title, description, bug ID...">
        </div>
        
        <div>
            <label for="status" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
            <select asp-for="Filter.Status" class="w-full border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
                <option value="">All Statuses</option>
                <option value="New">New</option>
                <option value="InProgress">In Progress</option>
                <option value="Resolved">Resolved</option>
                <option value="Closed">Closed</option>
                <option value="Reopened">Reopened</option>
            </select>
        </div>
        
        <div>
            <label for="severity" class="block text-sm font-medium text-gray-700 mb-1">Severity</label>
            <select asp-for="Filter.Severity" class="w-full border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
                <option value="">All Severities</option>
                <option value="Critical">?? Critical</option>
                <option value="High">?? High</option>
                <option value="Medium">?? Medium</option>
                <option value="Low">?? Low</option>
            </select>
        </div>
        
        <div>
            <label for="category" class="block text-sm font-medium text-gray-700 mb-1">Category</label>
            <select asp-for="Filter.Category" class="w-full border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
                <option value="">All Categories</option>
                <option value="UI">?? UI/Visual</option>
                <option value="Forms">?? Forms</option>
                <option value="Navigation">?? Navigation</option>
                <option value="Backend">?? Backend</option>
                <option value="Database">??? Database</option>
                <option value="Performance">? Performance</option>
                <option value="Security">?? Security</option>
                <option value="API">?? API</option>
                <option value="Authentication">?? Authentication</option>
                <option value="Reporting">?? Reporting</option>
            </select>
        </div>
        
        <div>
            <label for="pageArea" class="block text-sm font-medium text-gray-700 mb-1">Page Area</label>
            <select asp-for="Filter.PageArea" class="w-full border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-red-500 focus:border-red-500">
                <option value="">All Areas</option>
                <option value="Admin">Admin</option>
                <option value="Scheduler">Scheduler</option>
                <option value="EDM">EDM</option>
                <option value="Coating">Coating</option>
                <option value="Machining">Machining</option>
                <option value="QC">QC</option>
                <option value="Shipping">Shipping</option>
                <option value="Account">Account</option>
                <option value="PrintTracking">Print Tracking</option>
                <option value="Analytics">Analytics</option>
            </select>
        </div>
        
        <div class="flex items-end">
            <button type="submit" class="w-full bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition flex items-center justify-center">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
                Filter
            </button>
        </div>
    </form>
</div>

<!-- Bug Reports Table -->
<div class="bg-white rounded-lg shadow-lg overflow-hidden">
    <div class="px-6 py-4 border-b border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 18.5c-.77.833.192 2.5 1.732 2.5z"></path>
            </svg>
            Bug Reports (@Model.BugReports.Count of @Model.Statistics.TotalBugs)
        </h3>
    </div>
    
    @if (Model.BugReports.Any())
    {
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bug Info</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Details</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Reporter</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Page</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var bug in Model.BugReports)
                    {
                        <tr class="hover:bg-gray-50 transition-colors">
                            <td class="px-6 py-4">
                                <div class="flex items-start">
                                    <div class="flex-shrink-0 mr-3">
                                        <div class="text-2xl">@bug.GetSeverityIcon()</div>
                                    </div>
                                    <div>
                                        <div class="text-sm font-medium text-gray-900">@bug.Title</div>
                                        <div class="text-xs text-gray-500 font-mono">#@bug.BugId</div>
                                        <div class="flex flex-wrap gap-1 mt-1">
                                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium @Model.GetSeverityClass(bug.Severity)">
                                                @bug.Severity
                                            </span>
                                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium @Model.GetCategoryClass(bug.Category)">
                                                @bug.GetCategoryIcon() @bug.Category
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4">
                                <div class="text-sm text-gray-900 max-w-xs">
                                    <div class="truncate">@bug.Description</div>
                                    @if (!string.IsNullOrEmpty(bug.ErrorMessage))
                                    {
                                        <div class="text-xs text-red-600 mt-1 font-mono truncate">
                                            Error: @bug.ErrorMessage
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(bug.OperationId))
                                    {
                                        <div class="text-xs text-blue-600 mt-1 font-mono">
                                            Op: @bug.OperationId
                                        </div>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-4">
                                <div class="text-sm">
                                    <div class="text-gray-900 font-medium">@bug.ReportedBy</div>
                                    @if (!string.IsNullOrEmpty(bug.UserRole))
                                    {
                                        <div class="text-gray-500 text-xs">@bug.UserRole</div>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-4">
                                <div class="flex flex-col space-y-1">
                                    <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium @Model.GetStatusClass(bug.Status)">
                                        @bug.GetStatusIcon() @bug.Status
                                    </span>
                                    @if (bug.Status != "Resolved" && bug.Status != "Closed")
                                    {
                                        <form method="post" asp-page-handler="UpdateStatus" class="inline">
                                            <input type="hidden" name="id" value="@bug.Id" />
                                            <select name="status" onchange="this.form.submit()" class="text-xs border-gray-300 rounded px-2 py-1">
                                                <option value="">Change...</option>
                                                <option value="InProgress">In Progress</option>
                                                <option value="Resolved">Resolved</option>
                                                <option value="Closed">Closed</option>
                                            </select>
                                        </form>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-4">
                                <div class="text-sm">
                                    <div class="text-gray-900">@bug.PageName</div>
                                    <div class="text-gray-500 text-xs">@bug.PageArea</div>
                                </div>
                            </td>
                            <td class="px-6 py-4">
                                <div class="text-sm text-gray-900">@bug.ReportedDate.ToString("MMM dd, yyyy")</div>
                                <div class="text-xs text-gray-500">@bug.ReportedDate.ToString("HH:mm")</div>
                                <div class="text-xs text-gray-400">@bug.GetFormattedAge()</div>
                            </td>
                            <td class="px-6 py-4">
                                <div class="flex space-x-2">
                                    <button onclick="viewBugDetails(@bug.Id)" class="text-blue-600 hover:text-blue-800 text-sm">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                        </svg>
                                    </button>
                                    <form method="post" asp-page-handler="Delete" class="inline" onsubmit="return confirm('Are you sure you want to delete this bug report?')">
                                        <input type="hidden" name="id" value="@bug.Id" />
                                        <button type="submit" class="text-red-600 hover:text-red-800 text-sm">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                            </svg>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        
        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="bg-white px-4 py-3 border-t border-gray-200 sm:px-6">
                <div class="flex items-center justify-between">
                    <div class="text-sm text-gray-700">
                        Showing page @Model.Filter.Page of @Model.TotalPages
                    </div>
                    <div class="flex space-x-2">
                        @if (Model.HasPrevious)
                        {
                            <a asp-page="BugReports" asp-route-page="@(Model.Filter.Page - 1)" asp-all-route-data="Model.Filter.GetRouteData()" 
                               class="bg-gray-300 text-gray-700 px-3 py-2 rounded-md hover:bg-gray-400 transition">
                                Previous
                            </a>
                        }
                        
                        @if (Model.HasNext)
                        {
                            <a asp-page="BugReports" asp-route-page="@(Model.Filter.Page + 1)" asp-all-route-data="Model.Filter.GetRouteData()" 
                               class="bg-blue-600 text-white px-3 py-2 rounded-md hover:bg-blue-700 transition">
                                Next
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="text-center py-12">
            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">No bug reports found</h3>
            <p class="mt-1 text-sm text-gray-500">No bug reports match your current filters.</p>
        </div>
    }
</div>

<!-- Bug Details Modal -->
<div id="bugDetailsModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 hidden">
    <div class="relative top-10 mx-auto p-5 border w-11/12 md:w-4/5 lg:w-3/4 xl:w-2/3 shadow-lg rounded-md bg-white max-h-screen overflow-y-auto">
        <div class="mt-3">
            <div class="flex items-center justify-between pb-4 border-b">
                <h3 class="text-lg font-semibold text-gray-900">Bug Report Details</h3>
                <button onclick="closeBugDetailsModal()" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div id="bugDetailsContent" class="mt-6">
                <!-- Bug details will be loaded here -->
            </div>
        </div>
    </div>
</div>

<script>
    // Bug details modal functions
    async function viewBugDetails(bugId) {
        const modal = document.getElementById('bugDetailsModal');
        const content = document.getElementById('bugDetailsContent');
        
        modal.classList.remove('hidden');
        content.innerHTML = '<div class="text-center py-8"><div class="animate-spin rounded-full h-12 w-12 border-b-2 border-red-600 mx-auto"></div><p class="mt-4 text-gray-600">Loading bug details...</p></div>';
        
        try {
            const response = await fetch(`/Api/BugReport/${bugId}`);
            if (response.ok) {
                const bug = await response.json();
                content.innerHTML = renderBugDetails(bug);
            } else {
                throw new Error('Failed to load bug details');
            }
        } catch (error) {
            console.error('Error loading bug details:', error);
            content.innerHTML = '<div class="text-center py-8"><div class="text-red-500 mb-4"><svg class="w-12 h-12 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div><p class="text-gray-600">Unable to load bug details</p></div>';
        }
    }
    
    function closeBugDetailsModal() {
        document.getElementById('bugDetailsModal').classList.add('hidden');
    }
    
    function renderBugDetails(bug) {
        return `
            <div class="space-y-6">
                <div class="bg-red-50 rounded-lg p-4">
                    <div class="flex items-start">
                        <div class="text-3xl mr-4">${getSeverityIcon(bug.severity)}</div>
                        <div class="flex-1">
                            <h4 class="text-xl font-semibold text-gray-900">${bug.title}</h4>
                            <p class="text-sm text-gray-600 mt-1">Bug ID: <span class="font-mono">#${bug.bugId}</span></p>
                            <div class="flex flex-wrap gap-2 mt-2">
                                <span class="px-2 py-1 text-xs font-medium rounded ${getSeverityClass(bug.severity)}">${bug.severity}</span>
                                <span class="px-2 py-1 text-xs font-medium rounded ${getStatusClass(bug.status)}">${bug.status}</span>
                                <span class="px-2 py-1 text-xs font-medium rounded ${getCategoryClass(bug.category)}">${bug.category}</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <h5 class="font-semibold text-gray-900 mb-2">Description</h5>
                        <p class="text-gray-700 whitespace-pre-wrap">${bug.description}</p>
                    </div>
                    
                    <div>
                        <h5 class="font-semibold text-gray-900 mb-2">Page Information</h5>
                        <div class="text-sm space-y-1">
                            <div><strong>Page:</strong> ${bug.pageName}</div>
                            <div><strong>Area:</strong> ${bug.pageArea}</div>
                            <div><strong>URL:</strong> <span class="font-mono text-xs">${bug.pageUrl}</span></div>
                        </div>
                    </div>
                </div>
                
                ${bug.stepsToReproduce ? `
                <div>
                    <h5 class="font-semibold text-gray-900 mb-2">Steps to Reproduce</h5>
                    <p class="text-gray-700 whitespace-pre-wrap">${bug.stepsToReproduce}</p>
                </div>
                ` : ''}
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    ${bug.expectedBehavior ? `
                    <div>
                        <h5 class="font-semibold text-gray-900 mb-2">Expected Behavior</h5>
                        <p class="text-gray-700 whitespace-pre-wrap">${bug.expectedBehavior}</p>
                    </div>
                    ` : ''}
                    
                    ${bug.actualBehavior ? `
                    <div>
                        <h5 class="font-semibold text-gray-900 mb-2">Actual Behavior</h5>
                        <p class="text-gray-700 whitespace-pre-wrap">${bug.actualBehavior}</p>
                    </div>
                    ` : ''}
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <h5 class="font-semibold text-gray-900 mb-2">Reporter Information</h5>
                        <div class="text-sm space-y-1">
                            <div><strong>Reporter:</strong> ${bug.reportedBy}</div>
                            <div><strong>Role:</strong> ${bug.userRole || 'N/A'}</div>
                            <div><strong>Reported:</strong> ${new Date(bug.reportedDate).toLocaleString()}</div>
                        </div>
                    </div>
                    
                    <div>
                        <h5 class="font-semibold text-gray-900 mb-2">Technical Information</h5>
                        <div class="text-sm space-y-1">
                            <div><strong>Browser:</strong> ${bug.browserName || 'Unknown'} ${bug.browserVersion || ''}</div>
                            <div><strong>OS:</strong> ${bug.operatingSystem || 'Unknown'}</div>
                            <div><strong>Screen:</strong> ${bug.screenResolution || 'Unknown'}</div>
                            ${bug.operationId ? `<div><strong>Operation ID:</strong> <span class="font-mono">${bug.operationId}</span></div>` : ''}
                        </div>
                    </div>
                </div>
                
                ${bug.errorMessage ? `
                <div class="bg-red-50 rounded-lg p-4">
                    <h5 class="font-semibold text-red-800 mb-2">Error Details</h5>
                    <div class="text-sm">
                        <div><strong>Error Message:</strong> <span class="font-mono text-red-700">${bug.errorMessage}</span></div>
                        ${bug.stackTrace ? `<div class="mt-2"><strong>Stack Trace:</strong></div><pre class="text-xs bg-red-100 p-2 rounded mt-1 overflow-x-auto">${bug.stackTrace}</pre>` : ''}
                    </div>
                </div>
                ` : ''}
                
                ${bug.additionalNotes ? `
                <div>
                    <h5 class="font-semibold text-gray-900 mb-2">Additional Notes</h5>
                    <p class="text-gray-700 whitespace-pre-wrap">${bug.additionalNotes}</p>
                </div>
                ` : ''}
            </div>
        `;
    }
    
    // Helper functions for modal
    function getSeverityIcon(severity) {
        const icons = {
            'Critical': '??',
            'High': '??',
            'Medium': '??',
            'Low': '??'
        };
        return icons[severity] || '?';
    }
    
    function getSeverityClass(severity) {
        return severity.toLowerCase() === 'critical' ? 'bg-red-100 text-red-800' :
               severity.toLowerCase() === 'high' ? 'bg-orange-100 text-orange-800' :
               severity.toLowerCase() === 'medium' ? 'bg-yellow-100 text-yellow-800' :
               severity.toLowerCase() === 'low' ? 'bg-green-100 text-green-800' :
               'bg-gray-100 text-gray-800';
    }
    
    function getStatusClass(status) {
        return status.toLowerCase() === 'new' ? 'bg-blue-100 text-blue-800' :
               status.toLowerCase() === 'inprogress' ? 'bg-orange-100 text-orange-800' :
               status.toLowerCase() === 'resolved' ? 'bg-green-100 text-green-800' :
               status.toLowerCase() === 'closed' ? 'bg-gray-100 text-gray-800' :
               status.toLowerCase() === 'reopened' ? 'bg-red-100 text-red-800' :
               'bg-gray-100 text-gray-800';
    }
    
    function getCategoryClass(category) {
        return category.toLowerCase() === 'ui' ? 'bg-purple-100 text-purple-800' :
               category.toLowerCase() === 'backend' ? 'bg-indigo-100 text-indigo-800' :
               category.toLowerCase() === 'database' ? 'bg-blue-100 text-blue-800' :
               category.toLowerCase() === 'performance' ? 'bg-yellow-100 text-yellow-800' :
               category.toLowerCase() === 'security' ? 'bg-red-100 text-red-800' :
               category.toLowerCase() === 'forms' ? 'bg-green-100 text-green-800' :
               'bg-gray-100 text-gray-800';
    }
    
    // ESC key to close modal
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            closeBugDetailsModal();
        }
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}