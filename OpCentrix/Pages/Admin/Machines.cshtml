@page
@using OpCentrix.Models
@model OpCentrix.Pages.Admin.MachinesModel
@{
    ViewData["Title"] = "Machine Management";
    Layout = "~/Pages/Admin/Shared/_AdminLayout.cshtml";
}

<div class="space-y-6">
    <!-- Header Section -->
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Machine Management</h1>
            <p class="mt-1 text-sm text-gray-600">Manage SLS machines, capabilities, and status</p>
        </div>
        <div class="flex space-x-3">
            <button onclick="showAddCapabilityModal()" class="inline-flex items-center px-4 py-2 bg-purple-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-purple-700 active:bg-purple-900 focus:outline-none focus:border-purple-900 focus:ring ring-purple-300 transition ease-in-out duration-150">
                ⚙️ Add Capability
            </button>
            <button onclick="showCreateMachineModal()" class="inline-flex items-center px-4 py-2 bg-blue-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-blue-700 active:bg-blue-900 focus:outline-none focus:border-blue-900 focus:ring ring-blue-300 transition ease-in-out duration-150">
                ➕ Add New Machine
            </button>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div class="bg-white rounded-lg shadow p-6 border-l-4 border-blue-500">
            <div class="flex items-center">
                <div class="flex-1">
                    <h3 class="text-sm font-medium text-gray-500">Total Machines</h3>
                    <p class="text-2xl font-bold text-gray-900">@Model.TotalMachines</p>
                </div>
                <div class="text-blue-500 text-3xl">🏭</div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6 border-l-4 border-green-500">
            <div class="flex items-center">
                <div class="flex-1">
                    <h3 class="text-sm font-medium text-gray-500">Active Machines</h3>
                    <p class="text-2xl font-bold text-gray-900">@Model.ActiveMachines</p>
                </div>
                <div class="text-green-500 text-3xl">✅</div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6 border-l-4 border-red-500">
            <div class="flex items-center">
                <div class="flex-1">
                    <h3 class="text-sm font-medium text-gray-500">Offline Machines</h3>
                    <p class="text-2xl font-bold text-gray-900">@Model.OfflineMachines</p>
                </div>
                <div class="text-red-500 text-3xl">❌</div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6 border-l-4 border-purple-500">
            <div class="flex items-center">
                <div class="flex-1">
                    <h3 class="text-sm font-medium text-gray-500">Avg Utilization</h3>
                    <p class="text-2xl font-bold text-gray-900">@Model.AverageUtilization.ToString("F1")%</p>
                </div>
                <div class="text-purple-500 text-3xl">📊</div>
            </div>
        </div>
    </div>

    <!-- Status Statistics -->
    @if (Model.StatusStatistics.Any())
    {
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Machines by Status</h3>
            <div class="grid grid-cols-2 md:grid-cols-5 gap-4">
                @foreach (var statusStats in Model.StatusStatistics.OrderByDescending(s => s.Value))
                {
                    <div class="text-center p-3 bg-gray-50 rounded-lg">
                        <div class="text-2xl font-bold @(statusStats.Key switch 
                        { 
                            "Building" => "text-green-600", 
                            "Idle" => "text-blue-600", 
                            "Maintenance" => "text-yellow-600", 
                            "Error" => "text-red-600", 
                            "Offline" => "text-gray-600", 
                            _ => "text-gray-600" 
                        })">@statusStats.Value</div>
                        <div class="text-sm text-gray-600">@statusStats.Key</div>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Search and Filter Section -->
    <div class="bg-white rounded-lg shadow p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Search & Filter</h3>
        <form method="get" class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label class="block text-sm font-medium text-gray-700">Search</label>
                <input type="text" name="searchTerm" value="@Model.SearchTerm" placeholder="Machine ID, name, location..." 
                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
            </div>
            
            <div>
                <label class="block text-sm font-medium text-gray-700">Status</label>
                <select name="statusFilter" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    <option value="">All Statuses</option>
                    <option value="Idle" selected="@(Model.StatusFilter == "Idle")">Idle</option>
                    <option value="Building" selected="@(Model.StatusFilter == "Building")">Building</option>
                    <option value="Maintenance" selected="@(Model.StatusFilter == "Maintenance")">Maintenance</option>
                    <option value="Error" selected="@(Model.StatusFilter == "Error")">Error</option>
                    <option value="Offline" selected="@(Model.StatusFilter == "Offline")">Offline</option>
                </select>
            </div>
            
            <div>
                <label class="block text-sm font-medium text-gray-700">Material</label>
                <select name="materialFilter" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    <option value="">All Materials</option>
                    @foreach (var materialType in Model.MaterialTypes)
                    {
                        <optgroup label="@materialType">
                            @foreach (var material in Model.AvailableMaterials.Where(m => m.MaterialType == materialType))
                            {
                                <option value="@material.MaterialCode" selected="@(Model.MaterialFilter == material.MaterialCode)">
                                    @material.MaterialCode - @material.MaterialName
                                </option>
                            }
                        </optgroup>
                    }
                </select>
            </div>
            
            <div class="flex items-end">
                <button type="submit" class="w-full px-4 py-2 bg-gray-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 focus:outline-none focus:border-gray-700 focus:ring ring-gray-300 transition ease-in-out duration-150">
                    🔍 Search
                </button>
            </div>
        </form>
    </div>

    <!-- Machines Table -->
    <div class="bg-white rounded-lg shadow overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
            <h3 class="text-lg font-medium text-gray-900">Machines (@Model.Machines.Count)</h3>
        </div>
        
        @if (Model.Machines.Any())
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&statusFilter=@Model.StatusFilter&materialFilter=@Model.MaterialFilter&sortBy=MachineId&sortDirection=@Model.GetNextSortDirection("MachineId")" 
                                   class="flex items-center hover:text-gray-700">
                                    Machine ID @Model.GetSortIcon("MachineId")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&statusFilter=@Model.StatusFilter&materialFilter=@Model.MaterialFilter&sortBy=Name&sortDirection=@Model.GetNextSortDirection("Name")" 
                                   class="flex items-center hover:text-gray-700">
                                    Machine Name @Model.GetSortIcon("Name")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&statusFilter=@Model.StatusFilter&materialFilter=@Model.MaterialFilter&sortBy=Status&sortDirection=@Model.GetNextSortDirection("Status")" 
                                   class="flex items-center hover:text-gray-700">
                                    Status @Model.GetSortIcon("Status")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&statusFilter=@Model.StatusFilter&materialFilter=@Model.MaterialFilter&sortBy=Location&sortDirection=@Model.GetNextSortDirection("Location")" 
                                   class="flex items-center hover:text-gray-700">
                                    Location @Model.GetSortIcon("Location")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Current Material
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Build Volume
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&statusFilter=@Model.StatusFilter&materialFilter=@Model.MaterialFilter&sortBy=Priority&sortDirection=@Model.GetNextSortDirection("Priority")" 
                                   class="flex items-center hover:text-gray-700">
                                    Priority @Model.GetSortIcon("Priority")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var machine in Model.Machines)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="text-sm font-medium text-gray-900">@machine.MachineId</div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900">@machine.MachineName</div>
                                    <div class="text-sm text-gray-500">@machine.MachineType @(machine.MachineModel ?? "")</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(machine.Status switch 
                                    { 
                                        "Building" => "bg-green-100 text-green-800", 
                                        "Idle" => "bg-blue-100 text-blue-800", 
                                        "Maintenance" => "bg-yellow-100 text-yellow-800", 
                                        "Error" => "bg-red-100 text-red-800", 
                                        "Offline" => "bg-gray-100 text-gray-800", 
                                        _ => "bg-gray-100 text-gray-800" 
                                    })">
                                        @machine.Status
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900">@(string.IsNullOrEmpty(machine.Location) ? "-" : machine.Location)</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900">@(string.IsNullOrEmpty(machine.CurrentMaterial) ? "-" : machine.CurrentMaterial)</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900">@machine.BuildLengthMm × @machine.BuildWidthMm × @machine.BuildHeightMm mm</div>
                                    <div class="text-sm text-gray-500">@machine.BuildVolumeM3.ToString("F3") m³</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(machine.Priority switch 
                                    { 
                                        1 => "bg-red-100 text-red-800", 
                                        2 => "bg-orange-100 text-orange-800", 
                                        3 => "bg-blue-100 text-blue-800", 
                                        4 => "bg-green-100 text-green-800", 
                                        5 => "bg-gray-100 text-gray-800", 
                                        _ => "bg-gray-100 text-gray-800" 
                                    })">
                                        Priority @machine.Priority
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <div class="flex items-center justify-end space-x-2">
                                        <button onclick="editMachine(@machine.Id, '@machine.MachineId', '@machine.MachineName', '@machine.MachineModel', '@machine.SerialNumber', '@machine.Location', '@machine.SupportedMaterials', '@machine.CurrentMaterial', '@machine.Status', @(machine.IsActive ? "true" : "false"), @(machine.IsAvailableForScheduling ? "true" : "false"), @machine.Priority, @machine.BuildLengthMm, @machine.BuildWidthMm, @machine.BuildHeightMm, @machine.MaxLaserPowerWatts, @machine.MaxScanSpeedMmPerSec, @machine.MinLayerThicknessMicrons, @machine.MaxLayerThicknessMicrons, @machine.MaintenanceIntervalHours, '@machine.OpcUaEndpointUrl', @(machine.OpcUaEnabled ? "true" : "false"))" 
                                                class="text-blue-600 hover:text-blue-900" title="Edit Machine">
                                            ✏️
                                        </button>
                                        
                                        <form method="post" asp-page-handler="ToggleMachineStatus" class="inline">
                                            <input type="hidden" name="machineId" value="@machine.Id" />
                                            <button type="submit" 
                                                    class="@(machine.IsActive ? "text-orange-600 hover:text-orange-900" : "text-green-600 hover:text-green-900")" 
                                                    title="@(machine.IsActive ? "Deactivate Machine" : "Activate Machine")"
                                                    onclick="return confirm('@(machine.IsActive ? "Deactivate" : "Activate") machine @machine.MachineId?')">
                                                @(machine.IsActive ? "🚫" : "✅")
                                            </button>
                                        </form>
                                        
                                        <form method="post" asp-page-handler="DeleteMachine" class="inline">
                                            <input type="hidden" name="machineId" value="@machine.Id" />
                                            <button type="submit" 
                                                    class="text-red-600 hover:text-red-900" 
                                                    title="Delete Machine"
                                                    onclick="return confirm('Are you sure you want to delete machine @machine.MachineId? This action cannot be undone and will also remove all associated capabilities.')">
                                                🗑️
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <div class="text-gray-400 text-6xl mb-4">🏭</div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No machines found</h3>
                <p class="text-gray-600 mb-4">Try adjusting your search criteria or add a new machine.</p>
                <button onclick="showCreateMachineModal()" class="inline-flex items-center px-4 py-2 bg-blue-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-blue-700">
                    ➕ Add First Machine
                </button>
            </div>
        }
    </div>

    <!-- Machine Capabilities Section -->
    @if (Model.MachineCapabilities.Any())
    {
        <div class="bg-white rounded-lg shadow overflow-hidden">
            <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
                <h3 class="text-lg font-medium text-gray-900">Machine Capabilities (@Model.MachineCapabilities.Count)</h3>
            </div>
            
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Machine ID
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Capability
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Type
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Range
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Default
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Required
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var capability in Model.MachineCapabilities)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                    @(capability.Machine?.MachineId ?? "Unknown")
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @capability.CapabilityName
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @capability.CapabilityType
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if (capability.MinValue.HasValue && capability.MaxValue.HasValue)
                                    {
                                        <span>@capability.MinValue - @capability.MaxValue @(capability.Unit ?? "")</span>
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">No range</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <span class="text-gray-500">-</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @if (!capability.IsAvailable)
                                    {
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                            Required
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                            Optional
                                        </span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<!-- Create/Edit Machine Modal -->
<div id="machineModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-10 mx-auto p-5 border w-[90%] max-w-4xl shadow-lg rounded-md bg-white max-h-[90vh] overflow-y-auto">
        <div class="mt-3">
            <h3 id="machineModalTitle" class="text-lg font-medium text-gray-900 mb-4">Add New Machine</h3>
            
            <form method="post" id="machineForm">
                <input type="hidden" id="editingMachineId" name="EditingMachineId" value="" />
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Basic Information -->
                    <div class="space-y-4">
                        <h4 class="font-medium text-gray-900">Basic Information</h4>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Machine ID*</label>
                            <input type="text" name="CreateMachineRequest.MachineId" id="machineId" required minlength="2" maxlength="50" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Machine Name*</label>
                            <input type="text" name="CreateMachineRequest.MachineName" id="machineName" required minlength="3" maxlength="100" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Machine Type*</label>
                            <select name="CreateMachineRequest.MachineModel" id="machineModel" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                                <option value="TruPrint 3000">TruPrint 3000 (SLS)</option>
                                <option value="TruPrint 1000">TruPrint 1000 (SLS)</option>
                                <option value="Sodick AP1L">Sodick AP1L (EDM)</option>
                                <option value="Haas VF-2">Haas VF-2 (CNC)</option>
                                <option value="Custom SLS">Custom SLS</option>
                                <option value="Custom EDM">Custom EDM</option>
                                <option value="Custom CNC">Custom CNC</option>
                            </select>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Serial Number</label>
                            <input type="text" name="CreateMachineRequest.SerialNumber" id="serialNumber" maxlength="50" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Location</label>
                            <input type="text" name="CreateMachineRequest.Location" id="location" maxlength="100" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                    </div>

                    <!-- Technical Specifications -->
                    <div class="space-y-4">
                        <h4 class="font-medium text-gray-900">Technical Specifications</h4>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Supported Materials*</label>
                            <div class="mt-1 space-y-2">
                                <!-- Material selection checkboxes -->
                                <div class="grid grid-cols-2 gap-2 max-h-32 overflow-y-auto border border-gray-300 rounded-md p-2">
                                    @foreach (var material in Model.AvailableMaterials)
                                    {
                                        <label class="flex items-center space-x-2 text-sm">
                                            <input type="checkbox" 
                                                   class="material-checkbox h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                                                   data-material-code="@material.MaterialCode"
                                                   data-material-name="@material.MaterialName"
                                                   onchange="updateSupportedMaterials()">
                                            <span class="truncate" title="@material.MaterialName">
                                                <span class="font-medium">@material.MaterialCode</span>
                                                <span class="text-gray-600 text-xs block">@material.MaterialType</span>
                                            </span>
                                        </label>
                                    }
                                </div>
                                <!-- Hidden input for form submission -->
                                <textarea name="CreateMachineRequest.SupportedMaterials" id="supportedMaterials" required maxlength="500" rows="2" 
                                          placeholder="Selected materials will appear here..."
                                          class="mt-2 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-sm"
                                          readonly></textarea>
                                <p class="text-xs text-gray-500">Select materials above or manually enter comma-separated material codes</p>
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Current Material</label>
                            <select name="CreateMachineRequest.CurrentMaterial" id="currentMaterial" 
                                    class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                                <option value="">No material loaded</option>
                                @foreach (var material in Model.AvailableMaterials)
                                {
                                    <option value="@material.MaterialCode" data-material-type="@material.MaterialType">
                                        @material.MaterialCode - @material.MaterialName
                                    </option>
                                }
                            </select>
                            <p class="text-xs text-gray-500 mt-1">Material currently loaded in the machine</p>
                        </div>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Status*</label>
                                <select name="CreateMachineRequest.Status" id="status" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                                    <option value="Idle">Idle</option>
                                    <option value="Building">Building</option>
                                    <option value="Maintenance">Maintenance</option>
                                    <option value="Error">Error</option>
                                    <option value="Offline">Offline</option>
                                </select>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Priority</label>
                                <select name="CreateMachineRequest.Priority" id="priority" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                                    <option value="1">1 (Highest)</option>
                                    <option value="2">2 (High)</option>
                                    <option value="3" selected>3 (Normal)</option>
                                    <option value="4">4 (Low)</option>
                                    <option value="5">5 (Lowest)</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Build Volume -->
                    <div class="space-y-4">
                        <h4 class="font-medium text-gray-900">Build Volume (mm)</h4>
                        
                        <div class="grid grid-cols-3 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Length</label>
                                <input type="number" name="CreateMachineRequest.BuildLengthMm" id="buildLengthMm" min="50" max="500" value="250" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Width</label>
                                <input type="number" name="CreateMachineRequest.BuildWidthMm" id="buildWidthMm" min="50" max="500" value="250" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Height</label>
                                <input type="number" name="CreateMachineRequest.BuildHeightMm" id="buildHeightMm" min="50" max="500" value="300" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                        </div>
                    </div>

                    <!-- Process Parameters -->
                    <div class="space-y-4">
                        <h4 class="font-medium text-gray-900">Process Parameters</h4>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Max Laser Power (W)</label>
                                <input type="number" name="CreateMachineRequest.MaxLaserPowerWatts" id="maxLaserPowerWatts" min="100" max="1000" value="400" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Max Scan Speed (mm/s)</label>
                                <input type="number" name="CreateMachineRequest.MaxScanSpeedMmPerSec" id="maxScanSpeedMmPerSec" min="1000" max="10000" value="7000" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Min Layer Thickness (µm)</label>
                                <input type="number" name="CreateMachineRequest.MinLayerThicknessMicrons" id="minLayerThicknessMicrons" min="10" max="100" value="20" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Max Layer Thickness (µm)</label>
                                <input type="number" name="CreateMachineRequest.MaxLayerThicknessMicrons" id="maxLayerThicknessMicrons" min="10" max="100" value="60" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Maintenance Interval (hours)</label>
                            <input type="number" name="CreateMachineRequest.MaintenanceIntervalHours" id="maintenanceIntervalHours" min="100" max="2000" value="500" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                    </div>

                    <!-- OPC UA Configuration -->
                    <div class="space-y-4 md:col-span-2">
                        <h4 class="font-medium text-gray-900">OPC UA Configuration (Optional)</h4>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700">OPC UA Endpoint URL <span class="text-gray-500">(Optional)</span></label>
                                <input type="url" name="CreateMachineRequest.OpcUaEndpointUrl" id="opcUaEndpointUrl" maxlength="200" 
                                       placeholder="opc.tcp://192.168.1.100:4840"
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <div class="flex items-center space-x-6">
                                <div class="flex items-center">
                                    <input type="checkbox" name="CreateMachineRequest.OpcUaEnabled" id="opcUaEnabled" value="true" 
                                           class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                    <label for="opcUaEnabled" class="ml-2 block text-sm text-gray-900">OPC UA Enabled</label>
                                    <input type="hidden" name="CreateMachineRequest.OpcUaEnabled" value="false" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Status Flags -->
                    <div class="space-y-4 md:col-span-2">
                        <h4 class="font-medium text-gray-900">Machine Status</h4>
                        
                        <div class="flex items-center space-x-6">
                            <div class="flex items-center">
                                <input type="checkbox" name="CreateMachineRequest.IsActive" id="isActive" value="true" checked 
                                       class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                <label for="isActive" class="ml-2 block text-sm text-gray-900">Active</label>
                                <input type="hidden" name="CreateMachineRequest.IsActive" value="false" />
                            </div>
                            
                            <div class="flex items-center">
                                <input type="checkbox" name="CreateMachineRequest.IsAvailableForScheduling" id="isAvailableForScheduling" value="true" checked 
                                       class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                <label for="isAvailableForScheduling" class="ml-2 block text-sm text-gray-900">Available for Scheduling</label>
                                <input type="hidden" name="CreateMachineRequest.IsAvailableForScheduling" value="false" />
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="flex items-center justify-end space-x-2 mt-6 pt-6 border-t">
                    <button type="button" onclick="hideMachineModal()" 
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Cancel
                    </button>
                    <button type="submit" id="machineSubmitBtn" 
                            class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Create Machine
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Capability Modal -->
<div id="capabilityModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Add Machine Capability</h3>
            
            <form method="post" asp-page-handler="AddCapability">
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Machine ID*</label>
                        <select name="CreateCapabilityRequest.MachineId" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            <option value="">Select Machine</option>
                            @foreach (var machine in Model.Machines)
                            {
                                <option value="@machine.MachineId">@machine.MachineId - @machine.MachineName</option>
                            }
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Capability Name*</label>
                        <input type="text" name="CreateCapabilityRequest.CapabilityName" required maxlength="100" 
                               class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Capability Type*</label>
                        <select name="CreateCapabilityRequest.CapabilityType" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            <option value="">Select Type</option>
                            <option value="Process Parameter">Process Parameter</option>
                            <option value="Material Property">Material Property</option>
                            <option value="Quality Metric">Quality Metric</option>
                            <option value="Build Configuration">Build Configuration</option>
                            <option value="Maintenance">Maintenance</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Value Type*</label>
                        <select name="CreateCapabilityRequest.ValueType" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            <option value="Number">Number</option>
                            <option value="Text">Text</option>
                            <option value="Boolean">Boolean</option>
                        </select>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Min Value</label>
                            <input type="number" name="CreateCapabilityRequest.MinValue" step="0.01" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Max Value</label>
                            <input type="number" name="CreateCapabilityRequest.MaxValue" step="0.01" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Default Value</label>
                            <input type="number" name="CreateCapabilityRequest.DefaultValue" step="0.01" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Unit</label>
                            <input type="text" name="CreateCapabilityRequest.Unit" maxlength="20" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Description</label>
                        <textarea name="CreateCapabilityRequest.Description" maxlength="500" rows="3" 
                                  class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"></textarea>
                    </div>
                    
                    <div class="flex items-center">
                        <input type="checkbox" name="CreateCapabilityRequest.IsRequired" value="true" 
                               class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                        <label class="ml-2 block text-sm text-gray-900">Required</label>
                        <input type="hidden" name="CreateCapabilityRequest.IsRequired" value="false" />
                    </div>
                </div>
                
                <div class="flex items-center justify-end space-x-2 mt-6">
                    <button type="button" onclick="hideCapabilityModal()" 
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 text-sm font-medium text-white bg-purple-600 border border-transparent rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500">
                        Add Capability
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Include the shared alert notifications *@
<partial name="_AlertNotifications" />

@section Scripts {
    <script>
        let isEditMode = false;

        function showCreateMachineModal() {
            isEditMode = false;
            document.getElementById('machineModalTitle').textContent = 'Add New Machine';
            document.getElementById('machineSubmitBtn').textContent = 'Create Machine';
            document.getElementById('machineForm').action = '?handler=CreateMachine';
            document.getElementById('editingMachineId').value = '';
            
            // Clear form
            clearMachineForm();
            
            document.getElementById('machineModal').classList.remove('hidden');
        }

        function editMachine(id, machineId, machineName, machineModel, serialNumber, location, supportedMaterials, currentMaterial, status, isActive, isAvailableForScheduling, priority, buildLengthMm, buildWidthMm, buildHeightMm, maxLaserPowerWatts, maxScanSpeedMmPerSec, minLayerThicknessMicrons, maxLayerThicknessMicrons, maintenanceIntervalHours, opcUaEndpointUrl, opcUaEnabled) {
            isEditMode = true;
            document.getElementById('machineModalTitle').textContent = 'Edit Machine';
            document.getElementById('machineSubmitBtn').textContent = 'Update Machine';
            document.getElementById('machineForm').action = '?handler=EditMachine';
            document.getElementById('editingMachineId').value = id;
            
            // Populate form
            document.getElementById('machineId').value = machineId;
            document.getElementById('machineName').value = machineName;
            document.getElementById('machineModel').value = machineModel;  // Use machineModel parameter correctly
            document.getElementById('serialNumber').value = serialNumber;
            document.getElementById('location').value = location;
            
            // Handle materials
            document.getElementById('supportedMaterials').value = supportedMaterials;
            loadMaterialsFromText(); // This will check the appropriate checkboxes
            document.getElementById('currentMaterial').value = currentMaterial;
            
            document.getElementById('status').value = status;
            document.getElementById('isActive').checked = isActive;
            document.getElementById('isAvailableForScheduling').checked = isAvailableForScheduling;
            document.getElementById('priority').value = priority;
            document.getElementById('buildLengthMm').value = buildLengthMm;
            document.getElementById('buildWidthMm').value = buildWidthMm;
            document.getElementById('buildHeightMm').value = buildHeightMm;
            document.getElementById('maxLaserPowerWatts').value = maxLaserPowerWatts;
            document.getElementById('maxScanSpeedMmPerSec').value = maxScanSpeedMmPerSec;
            document.getElementById('minLayerThicknessMicrons').value = minLayerThicknessMicrons;
            document.getElementById('maxLayerThicknessMicrons').value = maxLayerThicknessMicrons;
            document.getElementById('maintenanceIntervalHours').value = maintenanceIntervalHours;
            document.getElementById('opcUaEndpointUrl').value = opcUaEndpointUrl;
            document.getElementById('opcUaEnabled').checked = opcUaEnabled;
            
            document.getElementById('machineModal').classList.remove('hidden');
        }

        function hideMachineModal() {
            document.getElementById('machineModal').classList.add('hidden');
        }

        function showAddCapabilityModal() {
            document.getElementById('capabilityModal').classList.remove('hidden');
        }

        function hideCapabilityModal() {
            document.getElementById('capabilityModal').classList.add('hidden');
        }

        // Enhanced material selection functionality
        function updateSupportedMaterials() {
            const checkboxes = document.querySelectorAll('.material-checkbox:checked');
            const selectedMaterials = Array.from(checkboxes)
                .map(cb => cb.getAttribute('data-material-code'))
                .join(',');
            
            document.getElementById('supportedMaterials').value = selectedMaterials;
            
            // Update current material dropdown to only show supported materials
            updateCurrentMaterialDropdown();
        }

        function updateCurrentMaterialDropdown() {
            const supportedMaterials = document.getElementById('supportedMaterials').value.split(',').map(m => m.trim());
            const currentMaterialSelect = document.getElementById('currentMaterial');
            const options = currentMaterialSelect.querySelectorAll('option');
            
            options.forEach(option => {
                if (option.value === '') {
                    // Keep "No material loaded" option always visible
                    option.style.display = '';
                } else {
                    // Show/hide based on supported materials
                    option.style.display = supportedMaterials.includes(option.value) ? '' : 'none';
                }
            });
        }

        function loadMaterialsFromText() {
            const supportedMaterials = document.getElementById('supportedMaterials').value;
            const materialCodes = supportedMaterials.split(',').map(m => m.trim());
            
            // Clear all checkboxes first
            document.querySelectorAll('.material-checkbox').forEach(cb => cb.checked = false);
            
            // Check the ones that match
            materialCodes.forEach(code => {
                const checkbox = document.querySelector(`[data-material-code="${code}"]`);
                if (checkbox) {
                    checkbox.checked = true;
                }
            });
            
            updateCurrentMaterialDropdown();
        }

        // Allow manual editing of supported materials
        document.getElementById('supportedMaterials').addEventListener('input', function() {
            loadMaterialsFromText();
        });

        function clearMachineForm() {
            document.getElementById('machineId').value = '';
            document.getElementById('machineName').value = '';
            document.getElementById('machineModel').value = 'TruPrint 3000';
            document.getElementById('serialNumber').value = '';
            document.getElementById('location').value = '';
            
            // Clear material selections
            document.querySelectorAll('.material-checkbox').forEach(cb => cb.checked = false);
            document.getElementById('supportedMaterials').value = '';
            document.getElementById('currentMaterial').value = '';
            updateCurrentMaterialDropdown();
            
            document.getElementById('status').value = 'Idle';
            document.getElementById('isActive').checked = true;
            document.getElementById('isAvailableForScheduling').checked = true;
            document.getElementById('priority').value = '3';
            document.getElementById('buildLengthMm').value = '250';
            document.getElementById('buildWidthMm').value = '250';
            document.getElementById('buildHeightMm').value = '300';
            document.getElementById('maxLaserPowerWatts').value = '400';
            document.getElementById('maxScanSpeedMmPerSec').value = '7000';
            document.getElementById('minLayerThicknessMicrons').value = '20';
            document.getElementById('maxLayerThicknessMicrons').value = '60';
            document.getElementById('maintenanceIntervalHours').value = '500';
            document.getElementById('opcUaEndpointUrl').value = '';
            document.getElementById('opcUaEnabled').checked = false;
        }

        // Close modals when clicking outside
        window.addEventListener('click', function(event) {
            const machineModal = document.getElementById('machineModal');
            const capabilityModal = document.getElementById('capabilityModal');
            
            if (event.target === machineModal) {
                hideMachineModal();
            }
            if (event.target === capabilityModal) {
                hideCapabilityModal();
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Escape to close modals
            if (e.key === 'Escape') {
                hideMachineModal();
                hideCapabilityModal();
            }
            
            // Ctrl+N to create new machine
            if (e.ctrlKey && e.key === 'n') {
                e.preventDefault();
                showCreateMachineModal();
            }
        });

        // Form validation
        document.getElementById('machineForm').addEventListener('submit', function(e) {
            const machineId = document.getElementById('machineId').value.trim();
            const machineName = document.getElementById('machineName').value.trim();
            const supportedMaterials = document.getElementById('supportedMaterials').value.trim();
            
            if (!machineId || !machineName || !supportedMaterials) {
                e.preventDefault();
                alert('Please fill in all required fields (Machine ID, Machine Name, and Supported Materials).');
                return false;
            }
            
            if (machineId.length < 2) {
                e.preventDefault();
                alert('Machine ID must be at least 2 characters long.');
                return false;
            }
        });
    </script>
}