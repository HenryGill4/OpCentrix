@page
@model OpCentrix.Pages.Admin.DatabaseModel
@{
    ViewData["Title"] = "Database Management";
    ViewData["Description"] = "Export, import, and diagnose database operations";
    Layout = "~/Pages/Admin/Shared/_AdminLayout.cshtml";
}

<div class="space-y-6">
    <!-- Header -->
    <div class="bg-white rounded-lg shadow p-6">
        <div class="flex items-center justify-between">
            <div>
                <h1 class="text-2xl font-bold text-gray-900">Database Management</h1>
                <p class="text-gray-600 mt-1">Export data, import configurations, and run database diagnostics</p>
            </div>
            <div class="flex items-center space-x-2">
                <div class="@(Model.DatabaseStatus.IsConnected ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800") px-3 py-1 rounded-full text-sm font-medium">
                    <div class="flex items-center space-x-1">
                        <div class="@(Model.DatabaseStatus.IsConnected ? "bg-green-400" : "bg-red-400") w-2 h-2 rounded-full"></div>
                        <span>@(Model.DatabaseStatus.IsConnected ? "Connected" : "Disconnected")</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Database Status -->
    <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">Database Status</h2>
        
        @if (Model.DatabaseStatus.IsConnected)
        {
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <div class="bg-blue-50 rounded-lg p-4">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-blue-600">Database Size</p>
                            <p class="text-2xl font-bold text-blue-900">@Model.DatabaseStatus.FileSize MB</p>
                        </div>
                    </div>
                </div>

                <div class="bg-green-50 rounded-lg p-4">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-green-600">Tables</p>
                            <p class="text-2xl font-bold text-green-900">@Model.DatabaseStatus.TableCount</p>
                        </div>
                    </div>
                </div>

                <div class="bg-purple-50 rounded-lg p-4">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <svg class="w-8 h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-purple-600">Total Records</p>
                            <p class="text-2xl font-bold text-purple-900">@Model.DatabaseStatus.RecordCounts.Values.Sum().ToString("N0")</p>
                        </div>
                    </div>
                </div>

                <div class="bg-orange-50 rounded-lg p-4">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <svg class="w-8 h-8 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-orange-600">Indexes</p>
                            <p class="text-2xl font-bold text-orange-900">@Model.DatabaseStatus.IndexCount</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Record Counts Table -->
            <div class="mt-6">
                <h3 class="text-md font-medium text-gray-900 mb-3">Record Counts by Table</h3>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                    @foreach (var kvp in Model.DatabaseStatus.RecordCounts.OrderByDescending(x => x.Value))
                    {
                        <div class="bg-gray-50 rounded-lg p-3">
                            <p class="text-sm font-medium text-gray-600">@kvp.Key</p>
                            <p class="text-lg font-bold text-gray-900">@kvp.Value.ToString("N0")</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Database Information -->
            <div class="mt-6 bg-gray-50 rounded-lg p-4">
                <h3 class="text-md font-medium text-gray-900 mb-3">Database Information</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                    <div>
                        <span class="font-medium text-gray-600">Database Name:</span>
                        <span class="text-gray-900 ml-2">@Model.DatabaseStatus.DatabaseName</span>
                    </div>
                    <div>
                        <span class="font-medium text-gray-600">Provider:</span>
                        <span class="text-gray-900 ml-2">@Model.DatabaseStatus.DatabaseProvider</span>
                    </div>
                    @if (Model.DatabaseStatus.CreatedDate.HasValue)
                    {
                        <div>
                            <span class="font-medium text-gray-600">Created:</span>
                            <span class="text-gray-900 ml-2">@Model.DatabaseStatus.CreatedDate.Value.ToString("yyyy-MM-dd HH:mm")</span>
                        </div>
                    }
                    @if (Model.DatabaseStatus.LastModified.HasValue)
                    {
                        <div>
                            <span class="font-medium text-gray-600">Last Modified:</span>
                            <span class="text-gray-900 ml-2">@Model.DatabaseStatus.LastModified.Value.ToString("yyyy-MM-dd HH:mm")</span>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                <div class="flex">
                    <svg class="w-5 h-5 text-red-400 mt-0.5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <div>
                        <h3 class="text-sm font-medium text-red-800">Database Connection Failed</h3>
                        <p class="text-sm text-red-700 mt-1">@Model.DatabaseStatus.ErrorMessage</p>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Export Section -->
    <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">
            <svg class="w-5 h-5 text-blue-600 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3M3 17V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v10a2 2 0 01-2 2H5a2 2 0 01-2-2z"></path>
            </svg>
            Export Database
        </h2>
        
        <form method="post" asp-page-handler="Export" class="space-y-4">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Export Options -->
                <div class="space-y-4">
                    <h3 class="text-md font-medium text-gray-900">Export Options</h3>
                    
                    <div>
                        <label asp-for="ExportOptions.ExportFormat" class="block text-sm font-medium text-gray-700 mb-1"></label>
                        <select asp-for="ExportOptions.ExportFormat" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="JSON">JSON</option>
                        </select>
                    </div>

                    <div class="flex items-center">
                        <input asp-for="ExportOptions.CompressOutput" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                        <label asp-for="ExportOptions.CompressOutput" class="ml-2 block text-sm text-gray-700">Compress output (ZIP format)</label>
                    </div>
                </div>

                <!-- Data Selection -->
                <div class="space-y-4">
                    <h3 class="text-md font-medium text-gray-900">Data to Export</h3>
                    
                    <div class="space-y-3">
                        <div class="flex items-center">
                            <input asp-for="ExportOptions.IncludeUsers" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ExportOptions.IncludeUsers" class="ml-2 block text-sm text-gray-700">User accounts and settings</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ExportOptions.IncludeMachines" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ExportOptions.IncludeMachines" class="ml-2 block text-sm text-gray-700">Machines and capabilities</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ExportOptions.IncludeParts" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ExportOptions.IncludeParts" class="ml-2 block text-sm text-gray-700">Parts library</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ExportOptions.IncludeJobs" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ExportOptions.IncludeJobs" class="ml-2 block text-sm text-gray-700">Scheduled jobs</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ExportOptions.IncludeSystemSettings" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ExportOptions.IncludeSystemSettings" class="ml-2 block text-sm text-gray-700">System settings</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ExportOptions.IncludeOperatingShifts" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ExportOptions.IncludeOperatingShifts" class="ml-2 block text-sm text-gray-700">Operating shifts</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ExportOptions.IncludeRolePermissions" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ExportOptions.IncludeRolePermissions" class="ml-2 block text-sm text-gray-700">Role permissions</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ExportOptions.IncludeHistoricalData" type="checkbox" class="h-4 w-4 text-orange-600 border-gray-300 rounded focus:ring-orange-500">
                            <label asp-for="ExportOptions.IncludeHistoricalData" class="ml-2 block text-sm text-gray-700">Historical data (archives, logs)</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="flex justify-end pt-4 border-t border-gray-200">
                <button type="submit" class="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition font-medium">
                    <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3"></path>
                    </svg>
                    Export Database
                </button>
            </div>
        </form>
    </div>

    <!-- Import Section -->
    <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">
            <svg class="w-5 h-5 text-green-600 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>
            </svg>
            Import Database
        </h2>
        
        <!-- Warning Box -->
        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
            <div class="flex">
                <svg class="w-5 h-5 text-yellow-400 mt-0.5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
                <div>
                    <h3 class="text-sm font-medium text-yellow-800">Import Safety Warning</h3>
                    <p class="text-sm text-yellow-700 mt-1">Importing data can overwrite existing records. Always create a backup before importing.</p>
                </div>
            </div>
        </div>

        <form method="post" asp-page-handler="Import" enctype="multipart/form-data" class="space-y-4">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- File Selection -->
                <div class="space-y-4">
                    <h3 class="text-md font-medium text-gray-900">Import File</h3>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Select Import File</label>
                        <input type="file" name="importFile" accept=".json,.zip" required
                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500">
                        <p class="text-xs text-gray-500 mt-1">Supported formats: JSON, ZIP</p>
                    </div>

                    <div class="flex items-center">
                        <input asp-for="ImportOptions.OverwriteExisting" type="checkbox" class="h-4 w-4 text-red-600 border-gray-300 rounded focus:ring-red-500">
                        <label asp-for="ImportOptions.OverwriteExisting" class="ml-2 block text-sm text-red-700 font-medium">Overwrite existing data (DANGEROUS)</label>
                    </div>
                </div>

                <!-- Import Options -->
                <div class="space-y-4">
                    <h3 class="text-md font-medium text-gray-900">Import Options</h3>
                    
                    <div class="space-y-3">
                        <div class="flex items-center">
                            <input asp-for="ImportOptions.ImportUsers" type="checkbox" class="h-4 w-4 text-green-600 border-gray-300 rounded focus:ring-green-500">
                            <label asp-for="ImportOptions.ImportUsers" class="ml-2 block text-sm text-gray-700">Import users</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ImportOptions.ImportMachines" type="checkbox" class="h-4 w-4 text-green-600 border-gray-300 rounded focus:ring-green-500">
                            <label asp-for="ImportOptions.ImportMachines" class="ml-2 block text-sm text-gray-700">Import machines</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ImportOptions.ImportParts" type="checkbox" class="h-4 w-4 text-green-600 border-gray-300 rounded focus:ring-green-500">
                            <label asp-for="ImportOptions.ImportParts" class="ml-2 block text-sm text-gray-700">Import parts</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ImportOptions.ImportJobs" type="checkbox" class="h-4 w-4 text-orange-600 border-gray-300 rounded focus:ring-orange-500">
                            <label asp-for="ImportOptions.ImportJobs" class="ml-2 block text-sm text-gray-700">Import jobs (careful!)</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ImportOptions.ImportSystemSettings" type="checkbox" class="h-4 w-4 text-green-600 border-gray-300 rounded focus:ring-green-500">
                            <label asp-for="ImportOptions.ImportSystemSettings" class="ml-2 block text-sm text-gray-700">Import system settings</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ImportOptions.ValidateBeforeImport" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ImportOptions.ValidateBeforeImport" class="ml-2 block text-sm text-gray-700">Validate before import</label>
                        </div>
                        
                        <div class="flex items-center">
                            <input asp-for="ImportOptions.BackupBeforeImport" type="checkbox" class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
                            <label asp-for="ImportOptions.BackupBeforeImport" class="ml-2 block text-sm text-gray-700">Create backup first</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="flex justify-end pt-4 border-t border-gray-200">
                <button type="submit" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition font-medium"
                        onclick="return confirm('Are you sure you want to import this data? This operation cannot be undone without a backup.')">
                    <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>
                    </svg>
                    Import Database
                </button>
            </div>
        </form>
    </div>

    <!-- Diagnostics Section -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- Schema Validation -->
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">
                <svg class="w-5 h-5 text-purple-600 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Schema Validation
            </h2>
            
            @if (Model.ValidationResult != null)
            {
                <div class="mb-4">
                    @if (Model.ValidationResult.IsValid)
                    {
                        <div class="bg-green-50 border border-green-200 rounded-lg p-3">
                            <p class="text-sm text-green-700">✅ Schema validation passed successfully</p>
                        </div>
                    }
                    else
                    {
                        <div class="bg-red-50 border border-red-200 rounded-lg p-3">
                            <p class="text-sm text-red-700 font-medium">❌ Schema validation found issues:</p>
                            <ul class="text-sm text-red-600 mt-2 list-disc list-inside">
                                @foreach (var issue in Model.ValidationResult.Issues)
                                {
                                    <li>@issue</li>
                                }
                            </ul>
                        </div>
                    }
                    
                    @if (Model.ValidationResult.Warnings.Any())
                    {
                        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-3 mt-2">
                            <p class="text-sm text-yellow-700 font-medium">⚠️ Warnings:</p>
                            <ul class="text-sm text-yellow-600 mt-2 list-disc list-inside">
                                @foreach (var warning in Model.ValidationResult.Warnings)
                                {
                                    <li>@warning</li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            }
            
            <form method="post" asp-page-handler="ValidateSchema">
                <button type="submit" class="w-full bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition font-medium">
                    Validate Database Schema
                </button>
            </form>
        </div>

        <!-- Integrity Check -->
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">
                <svg class="w-5 h-5 text-red-600 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
                Integrity Check
            </h2>
            
            @if (Model.IntegrityResult != null)
            {
                <div class="mb-4">
                    @if (Model.IntegrityResult.IsHealthy)
                    {
                        <div class="bg-green-50 border border-green-200 rounded-lg p-3">
                            <p class="text-sm text-green-700">✅ Database integrity check passed</p>
                        </div>
                    }
                    else
                    {
                        <div class="bg-red-50 border border-red-200 rounded-lg p-3">
                            <p class="text-sm text-red-700 font-medium">❌ Integrity issues found:</p>
                            <ul class="text-sm text-red-600 mt-2 list-disc list-inside">
                                @foreach (var issue in Model.IntegrityResult.Issues)
                                {
                                    <li>@issue</li>
                                }
                            </ul>
                        </div>
                    }
                    
                    @if (Model.IntegrityResult.Statistics.Any())
                    {
                        <div class="bg-gray-50 rounded-lg p-3 mt-2">
                            <p class="text-sm text-gray-700 font-medium">Statistics:</p>
                            <div class="text-sm text-gray-600 mt-1">
                                @foreach (var stat in Model.IntegrityResult.Statistics)
                                {
                                    <div>@stat.Key: @stat.Value</div>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            
            <form method="post" asp-page-handler="CheckIntegrity">
                <button type="submit" class="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition font-medium">
                    Check Database Integrity
                </button>
            </form>
        </div>
    </div>

    <!-- Backup & Restore -->
    <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">
            <svg class="w-5 h-5 text-indigo-600 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3-3m0 0l-3 3m3-3v12"></path>
            </svg>
            Backup & Restore
        </h2>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Backup -->
            <div>
                <h3 class="text-md font-medium text-gray-900 mb-3">Create Backup</h3>
                <form method="post" asp-page-handler="Backup" class="space-y-3">
                    <div>
                        <label asp-for="BackupRestore.BackupPath" class="block text-sm font-medium text-gray-700 mb-1"></label>
                        <input asp-for="BackupRestore.BackupPath" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" />
                    </div>
                    <button type="submit" class="w-full bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition font-medium">
                        Create Backup
                    </button>
                </form>
            </div>

            <!-- Restore -->
            <div>
                <h3 class="text-md font-medium text-gray-900 mb-3">Restore from Backup</h3>
                <form method="post" asp-page-handler="Restore" class="space-y-3">
                    <div>
                        <label asp-for="BackupRestore.RestorePath" class="block text-sm font-medium text-gray-700 mb-1"></label>
                        <input asp-for="BackupRestore.RestorePath" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500" />
                    </div>
                    <div class="flex items-center">
                        <input asp-for="BackupRestore.OverwriteExisting" type="checkbox" class="h-4 w-4 text-red-600 border-gray-300 rounded focus:ring-red-500">
                        <label asp-for="BackupRestore.OverwriteExisting" class="ml-2 block text-sm text-red-700 font-medium">Overwrite existing database</label>
                    </div>
                    <button type="submit" class="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition font-medium"
                            onclick="return confirm('Are you sure you want to restore from backup? This will overwrite the current database.')">
                        Restore Database
                    </button>
                </form>
            </div>
        </div>
    </div>

    <!-- Database Optimization -->
    <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">
            <svg class="w-5 h-5 text-green-600 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
            Database Optimization
        </h2>
        
        @if (Model.OptimizationResult != null)
        {
            <div class="mb-4">
                @if (Model.OptimizationResult.Success)
                {
                    <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                        <p class="text-sm text-green-700 font-medium">✅ Database optimization completed</p>
                        <div class="text-sm text-green-600 mt-2">
                            <div>Before: @Model.OptimizationResult.BeforeSizeMB.ToString("F2") MB</div>
                            <div>After: @Model.OptimizationResult.AfterSizeMB.ToString("F2") MB</div>
                            <div class="font-medium">Space saved: @Model.OptimizationResult.SpaceSavedMB.ToString("F2") MB</div>
                        </div>
                        @if (Model.OptimizationResult.OptimizationSteps.Any())
                        {
                            <div class="mt-2">
                                <p class="text-sm text-green-700">Steps performed:</p>
                                <ul class="text-sm text-green-600 list-disc list-inside">
                                    @foreach (var step in Model.OptimizationResult.OptimizationSteps)
                                    {
                                        <li>@step</li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="bg-red-50 border border-red-200 rounded-lg p-3">
                        <p class="text-sm text-red-700">❌ Optimization failed: @Model.OptimizationResult.ErrorMessage</p>
                    </div>
                }
            </div>
        }
        
        <div class="bg-blue-50 rounded-lg p-4 mb-4">
            <p class="text-sm text-blue-700">
                Database optimization runs VACUUM, ANALYZE, and other maintenance commands to reclaim space and improve performance.
                This operation is safe but may take some time on large databases.
            </p>
        </div>
        
        <form method="post" asp-page-handler="OptimizeDatabase">
            <button type="submit" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition font-medium">
                Optimize Database
            </button>
        </form>
    </div>

    <!-- Migration History -->
    @if (Model.DatabaseStatus.MigrationHistory.Any())
    {
        <div class="bg-white rounded-lg shadow p-6">
            <h2 class="text-lg font-semibold text-gray-900 mb-4">
                <svg class="w-5 h-5 text-gray-600 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Migration History
            </h2>
            
            <div class="bg-gray-50 rounded-lg p-4">
                <div class="text-sm text-gray-600 space-y-1">
                    @foreach (var migration in Model.DatabaseStatus.MigrationHistory.TakeLast(10))
                    {
                        <div class="flex items-center space-x-2">
                            <svg class="w-3 h-3 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                            </svg>
                            <span>@migration</span>
                        </div>
                    }
                    @if (Model.DatabaseStatus.MigrationHistory.Count > 10)
                    {
                        <div class="text-gray-500 text-xs">... and @(Model.DatabaseStatus.MigrationHistory.Count - 10) more</div>
                    }
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Auto-refresh database status every 30 seconds
        setInterval(function() {
            if (document.visibilityState === 'visible') {
                // Only refresh if page is visible
                location.reload();
            }
        }, 30000);

        // Show file size when file is selected
        document.querySelector('input[type="file"]')?.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                const sizeKB = Math.round(file.size / 1024);
                const sizeMB = Math.round(file.size / (1024 * 1024) * 100) / 100;
                const sizeText = sizeMB > 1 ? `${sizeMB} MB` : `${sizeKB} KB`;
                
                // Update or create size display
                let sizeDisplay = document.getElementById('file-size-display');
                if (!sizeDisplay) {
                    sizeDisplay = document.createElement('p');
                    sizeDisplay.id = 'file-size-display';
                    sizeDisplay.className = 'text-xs text-gray-600 mt-1';
                    e.target.parentNode.appendChild(sizeDisplay);
                }
                sizeDisplay.textContent = `Selected file: ${file.name} (${sizeText})`;
            }
        });

        // Validate export options
        document.querySelector('form[asp-page-handler="Export"]')?.addEventListener('submit', function(e) {
            const checkboxes = this.querySelectorAll('input[type="checkbox"][name*="Include"]:checked');
            if (checkboxes.length === 0) {
                e.preventDefault();
                alert('Please select at least one data type to export.');
                return false;
            }
        });

        // Validate import options
        document.querySelector('form[asp-page-handler="Import"]')?.addEventListener('submit', function(e) {
            const checkboxes = this.querySelectorAll('input[type="checkbox"][name*="Import"]:checked');
            if (checkboxes.length === 0) {
                e.preventDefault();
                alert('Please select at least one data type to import.');
                return false;
            }
            
            const overwrite = this.querySelector('input[name*="OverwriteExisting"]:checked');
            if (overwrite) {
                return confirm('⚠️ OVERWRITE MODE ENABLED\n\nThis will replace existing data with imported data. This cannot be undone without a backup.\n\nAre you absolutely sure you want to continue?');
            }
        });
    </script>
}