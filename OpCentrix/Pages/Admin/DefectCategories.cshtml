@page
@model OpCentrix.Pages.Admin.DefectCategoriesModel
@{
    ViewData["Title"] = "Defect Categories - Quality Management";
    Layout = "/Pages/Admin/Shared/_AdminLayout.cshtml";
}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Page Header -->
    <div class="mb-8">
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">Defect Categories</h1>
                <p class="mt-2 text-gray-600">Manage defect categories for quality control and inspection processes</p>
            </div>
            <button type="button" onclick="showCreateModal()" 
                    class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Add Category
            </button>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-blue-100 rounded-md flex items-center justify-center">
                        <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500">Total Categories</p>
                    <p class="text-2xl font-semibold text-gray-900">@Model.Statistics.TotalCategories</p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-green-100 rounded-md flex items-center justify-center">
                        <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500">Active Categories</p>
                    <p class="text-2xl font-semibold text-gray-900">@Model.Statistics.ActiveCategories</p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-purple-100 rounded-md flex items-center justify-center">
                        <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500">With Checkpoints</p>
                    <p class="text-2xl font-semibold text-gray-900">@Model.Statistics.CategoriesWithCheckpoints</p>
                </div>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-yellow-100 rounded-md flex items-center justify-center">
                        <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.082 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-500">Critical Severity</p>
                    <p class="text-2xl font-semibold text-gray-900">@(Model.Statistics.SeverityDistribution.ContainsKey(1) ? Model.Statistics.SeverityDistribution[1] : 0)</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters Panel -->
    <div class="bg-white rounded-lg shadow mb-6">
        <div class="p-6 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Filters & Search</h3>
            
            <form method="get" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    <!-- Search -->
                    <div>
                        <label for="searchTerm" class="block text-sm font-medium text-gray-700 mb-1">Search</label>
                        <input type="text" name="searchTerm" id="searchTerm" value="@Model.SearchTerm" 
                               placeholder="Search categories..."
                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    </div>

                    <!-- Category Group -->
                    <div>
                        <label for="categoryGroup" class="block text-sm font-medium text-gray-700 mb-1">Group</label>
                        <select name="categoryGroup" id="categoryGroup" 
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="">All Groups</option>
                            @foreach (var group in Model.AvailableGroups)
                            {
                                <option value="@group" selected="@(Model.CategoryGroup == group)">@group</option>
                            }
                        </select>
                    </div>

                    <!-- Severity Level -->
                    <div>
                        <label for="severityLevel" class="block text-sm font-medium text-gray-700 mb-1">Severity</label>
                        <select name="severityLevel" id="severityLevel" 
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="">All Severities</option>
                            <option value="1" selected="@(Model.SeverityLevel == 1)">1 - Critical</option>
                            <option value="2" selected="@(Model.SeverityLevel == 2)">2 - High</option>
                            <option value="3" selected="@(Model.SeverityLevel == 3)">3 - Medium</option>
                            <option value="4" selected="@(Model.SeverityLevel == 4)">4 - Low</option>
                            <option value="5" selected="@(Model.SeverityLevel == 5)">5 - Minor</option>
                        </select>
                    </div>

                    <!-- Status -->
                    <div>
                        <label for="isActive" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                        <select name="isActive" id="isActive" 
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <option value="">All Status</option>
                            <option value="true" selected="@(Model.IsActive == true)">Active</option>
                            <option value="false" selected="@(Model.IsActive == false)">Inactive</option>
                        </select>
                    </div>
                </div>

                <div class="flex justify-between items-center">
                    <button type="submit" 
                            class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                        Apply Filters
                    </button>
                    
                    <a href="/Admin/DefectCategories" 
                       class="text-gray-600 hover:text-gray-800 transition flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                        </svg>
                        Clear Filters
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Defect Categories Table -->
    <div class="bg-white rounded-lg shadow overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">
                Defect Categories (@Model.DefectCategories.Count)
            </h3>
        </div>

        @if (Model.DefectCategories.Any())
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?sortBy=Name&sortDirection=@Model.GetNextSortDirection("Name")&searchTerm=@Model.SearchTerm&categoryGroup=@Model.CategoryGroup&severityLevel=@Model.SeverityLevel&isActive=@Model.IsActive"
                                   class="flex items-center hover:text-gray-700">
                                    Category @Model.GetSortIcon("Name")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?sortBy=SeverityLevel&sortDirection=@Model.GetNextSortDirection("SeverityLevel")&searchTerm=@Model.SearchTerm&categoryGroup=@Model.CategoryGroup&severityLevel=@Model.SeverityLevel&isActive=@Model.IsActive"
                                   class="flex items-center hover:text-gray-700">
                                    Severity @Model.GetSortIcon("SeverityLevel")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?sortBy=CategoryGroup&sortDirection=@Model.GetNextSortDirection("CategoryGroup")&searchTerm=@Model.SearchTerm&categoryGroup=@Model.CategoryGroup&severityLevel=@Model.SeverityLevel&isActive=@Model.IsActive"
                                   class="flex items-center hover:text-gray-700">
                                    Group @Model.GetSortIcon("CategoryGroup")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Cost Impact</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?sortBy=IsActive&sortDirection=@Model.GetNextSortDirection("IsActive")&searchTerm=@Model.SearchTerm&categoryGroup=@Model.CategoryGroup&severityLevel=@Model.SeverityLevel&isActive=@Model.IsActive"
                                   class="flex items-center hover:text-gray-700">
                                    Status @Model.GetSortIcon("IsActive")
                                </a>
                            </th>
                            <th scope="col" class="relative px-6 py-3">
                                <span class="sr-only">Actions</span>
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var category in Model.DefectCategories)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="w-3 h-3 rounded-full mr-3" style="background-color: @category.ColorCode"></div>
                                        <div>
                                            <div class="text-sm font-medium text-gray-900">@category.Name</div>
                                            @if (!string.IsNullOrEmpty(category.Code))
                                            {
                                                <div class="text-sm text-gray-500">Code: @category.Code</div>
                                            }
                                            @if (!string.IsNullOrEmpty(category.Description))
                                            {
                                                <div class="text-sm text-gray-500 max-w-xs truncate">@category.Description</div>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full"
                                          style="background-color: @(category.SeverityColor)20; color: @category.SeverityColor;">
                                        @category.SeverityText
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @category.CategoryGroup
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    <span class="inline-flex px-2 py-1 text-xs font-medium rounded-full @(category.CostImpact switch {
                                        "Critical" => "bg-red-100 text-red-800",
                                        "High" => "bg-orange-100 text-orange-800", 
                                        "Medium" => "bg-yellow-100 text-yellow-800",
                                        "Low" => "bg-green-100 text-green-800",
                                        _ => "bg-gray-100 text-gray-800"
                                    })">
                                        @category.CostImpact
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @if (category.IsActive)
                                    {
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                                            Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-gray-100 text-gray-800">
                                            Inactive
                                        </span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <div class="flex items-center space-x-3">
                                        <button type="button" onclick="editCategory(@category.Id)" 
                                                class="text-blue-600 hover:text-blue-900 transition">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                            </svg>
                                        </button>
                                        
                                        <form method="post" asp-page-handler="ToggleStatus" style="display: inline;">
                                            <input type="hidden" name="id" value="@category.Id" />
                                            <button type="submit" 
                                                    class="@(category.IsActive ? "text-gray-600 hover:text-gray-900" : "text-green-600 hover:text-green-900") transition">
                                                @if (category.IsActive)
                                                {
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728"></path>
                                                    </svg>
                                                }
                                                else
                                                {
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                                    </svg>
                                                }
                                            </button>
                                        </form>

                                        @if (category.CanBeDeleted())
                                        {
                                            <form method="post" asp-page-handler="DeleteCategory" style="display: inline;" 
                                                  onsubmit="return confirm('Are you sure you want to delete this defect category?');">
                                                <input type="hidden" name="id" value="@category.Id" />
                                                <button type="submit" class="text-red-600 hover:text-red-900 transition">
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                    </svg>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No defect categories found</h3>
                <p class="mt-1 text-sm text-gray-500">
                    @if (string.IsNullOrEmpty(Model.SearchTerm) && string.IsNullOrEmpty(Model.CategoryGroup) && !Model.SeverityLevel.HasValue && !Model.IsActive.HasValue)
                    {
                        <span>Get started by creating a new defect category.</span>
                    }
                    else
                    {
                        <span>Try adjusting your search criteria or <a href="/Admin/DefectCategories" class="text-blue-600 hover:text-blue-800">clear filters</a>.</span>
                    }
                </p>
                <div class="mt-6">
                    <button type="button" onclick="showCreateModal()" 
                            class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Add Defect Category
                    </button>
                </div>
            </div>
        }
    </div>
</div>

<!-- Create/Edit Modal -->
<div id="categoryModal" class="fixed inset-0 z-50 hidden overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" onclick="hideModal()"></div>

        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full">
            <form id="categoryForm" method="post">
                <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="modalTitle">Add Defect Category</h3>
                        <button type="button" onclick="hideModal()" class="text-gray-400 hover:text-gray-600">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <!-- Basic Information -->
                        <div class="md:col-span-2">
                            <h4 class="text-sm font-medium text-gray-900 mb-3">Basic Information</h4>
                        </div>

                        <div>
                            <label for="Name" class="block text-sm font-medium text-gray-700 mb-1">Name *</label>
                            <input type="text" asp-for="CategoryInput.Name" id="Name" required 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <span asp-validation-for="CategoryInput.Name" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label for="Code" class="block text-sm font-medium text-gray-700 mb-1">Code</label>
                            <input type="text" asp-for="CategoryInput.Code" id="Code" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <span asp-validation-for="CategoryInput.Code" class="text-red-500 text-sm"></span>
                        </div>

                        <div class="md:col-span-2">
                            <label for="Description" class="block text-sm font-medium text-gray-700 mb-1">Description</label>
                            <textarea asp-for="CategoryInput.Description" id="Description" rows="3"
                                      class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"></textarea>
                            <span asp-validation-for="CategoryInput.Description" class="text-red-500 text-sm"></span>
                        </div>

                        <!-- Classification -->
                        <div class="md:col-span-2">
                            <h4 class="text-sm font-medium text-gray-900 mb-3 mt-4">Classification</h4>
                        </div>

                        <div>
                            <label for="SeverityLevel" class="block text-sm font-medium text-gray-700 mb-1">Severity Level *</label>
                            <select asp-for="CategoryInput.SeverityLevel" id="SeverityLevel" required
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                <option value="1">1 - Critical</option>
                                <option value="2">2 - High</option>
                                <option value="3" selected>3 - Medium</option>
                                <option value="4">4 - Low</option>
                                <option value="5">5 - Minor</option>
                            </select>
                            <span asp-validation-for="CategoryInput.SeverityLevel" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label for="CategoryGroup" class="block text-sm font-medium text-gray-700 mb-1">Group</label>
                            <select asp-for="CategoryInput.CategoryGroup" id="CategoryGroup"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                @foreach (var group in Model.AvailableGroups)
                                {
                                    <option value="@group">@group</option>
                                }
                            </select>
                            <span asp-validation-for="CategoryInput.CategoryGroup" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label for="CostImpact" class="block text-sm font-medium text-gray-700 mb-1">Cost Impact</label>
                            <select asp-for="CategoryInput.CostImpact" id="CostImpact"
                                    class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                <option value="Low">Low</option>
                                <option value="Medium" selected>Medium</option>
                                <option value="High">High</option>
                                <option value="Critical">Critical</option>
                            </select>
                            <span asp-validation-for="CategoryInput.CostImpact" class="text-red-500 text-sm"></span>
                        </div>

                        <div>
                            <label for="AverageResolutionTimeMinutes" class="block text-sm font-medium text-gray-700 mb-1">Avg Resolution Time (min)</label>
                            <input type="number" asp-for="CategoryInput.AverageResolutionTimeMinutes" id="AverageResolutionTimeMinutes" min="1" max="9999"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <span asp-validation-for="CategoryInput.AverageResolutionTimeMinutes" class="text-red-500 text-sm"></span>
                        </div>

                        <!-- Status and Options -->
                        <div class="md:col-span-2">
                            <h4 class="text-sm font-medium text-gray-900 mb-3 mt-4">Status & Options</h4>
                        </div>

                        <div class="flex items-center">
                            <input type="checkbox" asp-for="CategoryInput.IsActive" id="IsActive" 
                                   class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                            <label for="IsActive" class="ml-2 block text-sm text-gray-900">Active</label>
                        </div>

                        <div class="flex items-center">
                            <input type="checkbox" asp-for="CategoryInput.RequiresImmediateNotification" id="RequiresImmediateNotification" 
                                   class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                            <label for="RequiresImmediateNotification" class="ml-2 block text-sm text-gray-900">Requires Immediate Notification</label>
                        </div>
                    </div>
                </div>

                <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                    <button type="submit" id="submitButton"
                            class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">
                        Save Category
                    </button>
                    <button type="button" onclick="hideModal()"
                            class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:w-auto sm:text-sm">
                        Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showCreateModal() {
            document.getElementById('modalTitle').textContent = 'Add Defect Category';
            document.getElementById('categoryForm').action = '?handler=CreateCategory';
            document.getElementById('submitButton').textContent = 'Create Category';
            document.getElementById('categoryModal').classList.remove('hidden');
            
            // Clear form
            document.getElementById('categoryForm').reset();
            document.getElementById('IsActive').checked = true;
        }

        function editCategory(id) {
            // This would be implemented with HTMX or fetch to load category data
            // For now, just show modal - you'd need to populate with existing data
            document.getElementById('modalTitle').textContent = 'Edit Defect Category';
            document.getElementById('categoryForm').action = '?handler=EditCategory';
            document.getElementById('submitButton').textContent = 'Update Category';
            document.getElementById('categoryModal').classList.remove('hidden');
        }

        function hideModal() {
            document.getElementById('categoryModal').classList.add('hidden');
        }

        // Close modal on escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                hideModal();
            }
        });
    </script>
}