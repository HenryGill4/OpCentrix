@page
@model OpCentrix.Pages.Admin.JobsModel
@{
    ViewData["Title"] = "Manage Jobs";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<div class="mb-6">
    <div class="flex justify-between items-center">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Manage Jobs</h1>
            <p class="text-gray-600 mt-1">View, edit, and delete manufacturing jobs</p>
        </div>
        <a href="/Scheduler" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition">
            + Add New Job
        </a>
    </div>
</div>

<!-- Filters -->
<div class="bg-white rounded-lg shadow p-6 mb-6">
    <form method="get" class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Search</label>
            <input type="text" name="search" value="@Model.SearchTerm" placeholder="Part number, operator, notes..." 
                   class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500" />
        </div>
        
        <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
            <select name="status" class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">All Statuses</option>
                <option value="Scheduled" selected="@(Model.StatusFilter == "Scheduled")">Scheduled</option>
                <option value="Active" selected="@(Model.StatusFilter == "Active")">Active</option>
                <option value="Complete" selected="@(Model.StatusFilter == "Complete")">Complete</option>
                <option value="Delayed" selected="@(Model.StatusFilter == "Delayed")">Delayed</option>
                <option value="Cancelled" selected="@(Model.StatusFilter == "Cancelled")">Cancelled</option>
            </select>
        </div>
        
        <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Machine</label>
            <select name="machine" class="w-full border border-gray-300 rounded-lg p-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">All Machines</option>
                <option value="TI1" selected="@(Model.MachineFilter == "TI1")">TI1</option>
                <option value="TI2" selected="@(Model.MachineFilter == "TI2")">TI2</option>
                <option value="INC" selected="@(Model.MachineFilter == "INC")">INC</option>
            </select>
        </div>
        
        <div class="flex items-end">
            <button type="submit" class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition">
                Filter
            </button>
        </div>
    </form>
</div>

<!-- Results Summary -->
<div class="mb-4">
    <p class="text-sm text-gray-600">
        Showing @((Model.PageNumber - 1) * Model.PageSize + 1) to @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)) of @Model.TotalCount jobs
    </p>
</div>

<!-- Jobs Table -->
<div class="bg-white rounded-lg shadow overflow-hidden">
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Part</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Machine</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Schedule</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quantity</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Operator</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @if (Model.Jobs.Any())
                {
                    @foreach (var job in Model.Jobs)
                    {
                        <tr class="hover:bg-gray-50">
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                #@job.Id
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm font-medium text-gray-900">@job.PartNumber</div>
                                @if (job.Part != null)
                                {
                                    <div class="text-sm text-gray-500">@job.Part.Description</div>
                                }
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(job.MachineId switch { "TI1" => "bg-blue-100 text-blue-800", "TI2" => "bg-green-100 text-green-800", "INC" => "bg-red-100 text-red-800", _ => "bg-gray-100 text-gray-800" })">
                                    @job.MachineId
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <div>@job.ScheduledStart.ToString("MM/dd/yyyy HH:mm")</div>
                                <div class="text-xs text-gray-500">to @job.ScheduledEnd.ToString("MM/dd/yyyy HH:mm")</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @{
                                    var statusClass = job.Status switch
                                    {
                                        "Scheduled" => "bg-blue-100 text-blue-800",
                                        "Active" => "bg-green-100 text-green-800",
                                        "Complete" => "bg-gray-100 text-gray-800",
                                        "Delayed" => "bg-red-100 text-red-800",
                                        "Cancelled" => "bg-gray-100 text-gray-800",
                                        _ => "bg-gray-100 text-gray-800"
                                    };
                                }
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @statusClass">
                                    @job.Status
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                @job.Quantity
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                @(job.Operator ?? "Not assigned")
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                                <button hx-get="/Admin/Jobs?handler=Edit&id=@job.Id" 
                                        hx-target="#modal-container"
                                        hx-on:htmx:after-request="showModal(event.detail.xhr.responseText)"
                                        class="text-blue-600 hover:text-blue-900 transition">
                                    Edit
                                </button>
                                <button hx-post="/Admin/Jobs?handler=Delete&id=@job.Id"
                                        hx-confirm="Are you sure you want to delete this job?"
                                        class="text-red-600 hover:text-red-900 transition">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="px-6 py-4 text-center text-gray-500">
                            No jobs found matching your criteria.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6 mt-6 rounded-lg shadow">
        <div class="flex-1 flex justify-between sm:hidden">
            @if (Model.PageNumber > 1)
            {
                <a href="?page=@(Model.PageNumber - 1)&search=@Model.SearchTerm&status=@Model.StatusFilter&machine=@Model.MachineFilter" 
                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                    Previous
                </a>
            }
            @if (Model.PageNumber < Model.TotalPages)
            {
                <a href="?page=@(Model.PageNumber + 1)&search=@Model.SearchTerm&status=@Model.StatusFilter&machine=@Model.MachineFilter" 
                   class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                    Next
                </a>
            }
        </div>
        <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
            <div>
                <p class="text-sm text-gray-700">
                    Page <span class="font-medium">@Model.PageNumber</span> of <span class="font-medium">@Model.TotalPages</span>
                </p>
            </div>
            <div>
                <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px">
                    @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                    {
                        @if (i == Model.PageNumber)
                        {
                            <span class="relative inline-flex items-center px-4 py-2 border border-blue-500 bg-blue-50 text-sm font-medium text-blue-600">
                                @i
                            </span>
                        }
                        else
                        {
                            <a href="?page=@i&search=@Model.SearchTerm&status=@Model.StatusFilter&machine=@Model.MachineFilter" 
                               class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                @i
                            </a>
                        }
                    }
                </nav>
            </div>
        </div>
    </div>
}