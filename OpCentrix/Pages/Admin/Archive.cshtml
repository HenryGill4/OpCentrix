@page "/Admin/Archive"
@model OpCentrix.Pages.Admin.ArchiveModel
@{
    ViewData["Title"] = "Job Archive & Cleanup";
    Layout = "_AdminLayout";
}

<div class="admin-page">
    <div class="admin-header">
        <div class="admin-header-content">
            <div class="admin-header-title">
                <h1>Job Archive & Cleanup</h1>
                <p>Manage job archival, cleanup operations, and historical data</p>
            </div>
            <div class="admin-header-actions">
                <div class="btn-group">
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#archiveJobModal">
                        Archive Job
                    </button>
                    <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#cleanupModal">
                        Cleanup Tools
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Navigation Tabs -->
    <div class="admin-tabs">
        <nav class="nav nav-tabs">
            <a class="nav-link @(Model.ActiveTab == "archive" ? "active" : "")" 
               href="?ActiveTab=archive">
                <i class="bi bi-archive"></i> Archived Jobs
            </a>
            <a class="nav-link @(Model.ActiveTab == "eligible" ? "active" : "")" 
               href="?ActiveTab=eligible">
                <i class="bi bi-clock-history"></i> Eligible for Archive
            </a>
            <a class="nav-link @(Model.ActiveTab == "statistics" ? "active" : "")" 
               href="?ActiveTab=statistics">
                <i class="bi bi-graph-up"></i> Statistics
            </a>
            <a class="nav-link @(Model.ActiveTab == "cleanup" ? "active" : "")" 
               href="?ActiveTab=cleanup">
                <i class="bi bi-trash"></i> Cleanup Tools
            </a>
        </nav>
    </div>

    <!-- Archived Jobs Tab -->
    @if (Model.ActiveTab == "archive")
    {
        <div class="admin-filters">
            <form method="get" class="admin-filter-form">
                <input type="hidden" name="ActiveTab" value="archive" />
                <div class="admin-filter-row">
                    <div class="admin-filter-group">
                        <label for="searchTerm">Search</label>
                        <input type="text" id="searchTerm" name="searchTerm" value="@Model.SearchTerm" 
                               placeholder="Search jobs..." class="form-control">
                    </div>
                    
                    <div class="admin-filter-group">
                        <label for="machineFilter">Machine</label>
                        <select id="machineFilter" name="machineFilter" class="form-select">
                            <option value="">All Machines</option>
                            @foreach (var machine in Model.ArchiveMachines)
                            {
                                <option value="@machine" selected="@(Model.MachineFilter == machine)">@machine</option>
                            }
                        </select>
                    </div>
                    
                    <div class="admin-filter-group">
                        <label for="reasonFilter">Archive Reason</label>
                        <select id="reasonFilter" name="reasonFilter" class="form-select">
                            <option value="">All Reasons</option>
                            @foreach (var reason in Model.ArchiveReasons)
                            {
                                <option value="@reason" selected="@(Model.ReasonFilter == reason)">@reason</option>
                            }
                        </select>
                    </div>
                    
                    <div class="admin-filter-actions">
                        <button type="submit" class="btn btn-primary">Filter</button>
                        <a href="?ActiveTab=archive" class="btn btn-secondary">Clear</a>
                    </div>
                </div>
            </form>
        </div>

        <div class="admin-table-container">
            <div class="admin-table-header">
                <h3>Archived Jobs (@Model.ArchivedJobs.Count)</h3>
            </div>
            
            <div class="table-responsive">
                <table class="table admin-table">
                    <thead>
                        <tr>
                            <th>Original ID</th>
                            <th>Part Number</th>
                            <th>Machine</th>
                            <th>Status</th>
                            <th>Archived Date</th>
                            <th>Reason</th>
                            <th>Duration</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ArchivedJobs.Any())
                        {
                            @foreach (var job in Model.ArchivedJobs)
                            {
                                <tr>
                                    <td>
                                        <strong>#@job.OriginalJobId</strong>
                                        <small class="text-muted d-block">
                                            @job.ArchivedBy
                                        </small>
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@job.PartNumber</strong>
                                            @if (!string.IsNullOrEmpty(job.PartDescription))
                                            {
                                                <small class="text-muted d-block">@job.PartDescription</small>
                                            }
                                        </div>
                                    </td>
                                    <td>@job.MachineId</td>
                                    <td>
                                        <span class="badge @Model.GetJobStatusBadgeClass(job.Status)">
                                            @job.Status
                                        </span>
                                    </td>
                                    <td>
                                        @job.ArchivedDate.ToString("yyyy-MM-dd HH:mm")
                                    </td>
                                    <td>
                                        <span class="badge @Model.GetArchiveReasonBadgeClass(job.ArchiveReason)">
                                            @job.ArchiveReason
                                        </span>
                                    </td>
                                    <td>
                                        <div>
                                            <small class="text-muted">Scheduled:</small> @Model.FormatDuration(job.ScheduledDuration)
                                        </div>
                                        @if (job.ActualDuration.HasValue)
                                        {
                                            <div>
                                                <small class="text-muted">Actual:</small> @Model.FormatDuration(job.ActualDuration)
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <button type="button" class="btn btn-outline-info" 
                                                    onclick="viewArchivedJob(@job.Id)" title="View Details">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            <form method="post" asp-page-handler="RestoreJob" class="d-inline">
                                                <input type="hidden" name="archivedJobId" value="@job.Id" />
                                                <button type="submit" class="btn btn-outline-success" 
                                                        title="Restore Job"
                                                        onclick="return confirm('Are you sure you want to restore this job?')">
                                                    <i class="bi bi-arrow-counterclockwise"></i>
                                                </button>
                                            </form>
                                            <form method="post" asp-page-handler="DeleteArchivedJob" class="d-inline">
                                                <input type="hidden" name="archivedJobId" value="@job.Id" />
                                                <button type="submit" class="btn btn-outline-danger" 
                                                        title="Delete Permanently"
                                                        onclick="return confirm('Are you sure you want to permanently delete this archived job? This cannot be undone.')">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="text-center text-muted py-4">
                                    No archived jobs found.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Eligible Jobs Tab -->
    @if (Model.ActiveTab == "eligible")
    {
        <div class="admin-filters">
            <form method="get" class="admin-filter-form">
                <input type="hidden" name="ActiveTab" value="eligible" />
                <div class="admin-filter-row">
                    <div class="admin-filter-group">
                        <label for="eligibleDays">Show jobs older than</label>
                        <select id="eligibleDays" name="eligibleDays" class="form-select">
                            <option value="7" selected="@(Model.EligibleDays == 7)">7 days</option>
                            <option value="14" selected="@(Model.EligibleDays == 14)">14 days</option>
                            <option value="30" selected="@(Model.EligibleDays == 30)">30 days</option>
                            <option value="60" selected="@(Model.EligibleDays == 60)">60 days</option>
                            <option value="90" selected="@(Model.EligibleDays == 90)">90 days</option>
                        </select>
                    </div>
                    
                    <div class="admin-filter-actions">
                        <button type="submit" class="btn btn-primary">Refresh</button>
                    </div>
                </div>
            </form>
        </div>

        <div class="admin-table-container">
            <div class="admin-table-header">
                <h3>Jobs Eligible for Archive (@Model.EligibleJobs.Count)</h3>
                @if (Model.EligibleJobs.Any())
                {
                    <div class="admin-table-actions">
                        <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#bulkArchiveModal">
                            Bulk Archive Selected
                        </button>
                    </div>
                }
            </div>
            
            <div class="table-responsive">
                <table class="table admin-table">
                    <thead>
                        <tr>
                            <th>
                                <input type="checkbox" id="selectAll" onchange="toggleAllJobSelection()" />
                            </th>
                            <th>Job ID</th>
                            <th>Part Number</th>
                            <th>Machine</th>
                            <th>Status</th>
                            <th>Last Modified</th>
                            <th>Age (Days)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.EligibleJobs.Any())
                        {
                            @foreach (var job in Model.EligibleJobs)
                            {
                                var age = (DateTime.UtcNow - job.LastModifiedDate).Days;
                                <tr>
                                    <td>
                                        <input type="checkbox" class="job-checkbox" value="@job.Id" />
                                    </td>
                                    <td>
                                        <strong>#@job.Id</strong>
                                    </td>
                                    <td>
                                        <div>
                                            <strong>@job.PartNumber</strong>
                                            @if (job.Part != null && !string.IsNullOrEmpty(job.Part.Description))
                                            {
                                                <small class="text-muted d-block">@job.Part.Description</small>
                                            }
                                        </div>
                                    </td>
                                    <td>@job.MachineId</td>
                                    <td>
                                        <span class="badge @Model.GetJobStatusBadgeClass(job.Status)">
                                            @job.Status
                                        </span>
                                    </td>
                                    <td>
                                        @job.LastModifiedDate.ToString("yyyy-MM-dd HH:mm")
                                    </td>
                                    <td>
                                        <span class="badge @(age > 60 ? "bg-danger" : age > 30 ? "bg-warning" : "bg-info")">
                                            @age days
                                        </span>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-outline-warning" 
                                                onclick="archiveIndividualJob(@job.Id)" title="Archive Job">
                                            <i class="bi bi-archive"></i> Archive
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" class="text-center text-muted py-4">
                                    No jobs are eligible for archival older than @Model.EligibleDays days.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <!-- Statistics Tab -->
    @if (Model.ActiveTab == "statistics")
    {
        <div class="admin-stats">
            <div class="admin-stat-card">
                <div class="admin-stat-content">
                    <div class="admin-stat-value">@(Model.ArchiveStatistics.GetValueOrDefault("TotalArchivedJobs", 0))</div>
                    <div class="admin-stat-label">Total Archived</div>
                </div>
            </div>
            
            <div class="admin-stat-card">
                <div class="admin-stat-content">
                    <div class="admin-stat-value">@(Model.ArchiveStatistics.GetValueOrDefault("EligibleForArchival", 0))</div>
                    <div class="admin-stat-label">Eligible for Archive</div>
                </div>
            </div>
            
            <div class="admin-stat-card">
                <div class="admin-stat-content">
                    <div class="admin-stat-value">@(Model.ArchiveStatistics.GetValueOrDefault("ActiveJobCount", 0))</div>
                    <div class="admin-stat-label">Active Jobs</div>
                </div>
            </div>
            
            <div class="admin-stat-card">
                <div class="admin-stat-content">
                    <div class="admin-stat-value">@(Model.ArchiveStatistics.GetValueOrDefault("RecentArchivesCount", 0))</div>
                    <div class="admin-stat-label">Archived This Week</div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>Archive by Machine</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.ArchiveStatistics.ContainsKey("MachineArchiveData"))
                        {
                            var machineData = Model.ArchiveStatistics["MachineArchiveData"] as List<dynamic>;
                            @if (machineData != null && machineData.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>Machine</th>
                                                <th>Archived Jobs</th>
                                                <th>Latest Archive</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in machineData)
                                            {
                                                <tr>
                                                    <td>@item.MachineId</td>
                                                    <td>@item.Count</td>
                                                    <td>@DateTime.Parse(item.LatestArchive.ToString()).ToString("MM/dd/yyyy")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No machine data available.</p>
                            }
                        }
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>Archive by Reason</h5>
                    </div>
                    <div class="card-body">
                        @if (Model.ArchiveStatistics.ContainsKey("ReasonArchiveData"))
                        {
                            var reasonData = Model.ArchiveStatistics["ReasonArchiveData"] as List<dynamic>;
                            @if (reasonData != null && reasonData.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>Reason</th>
                                                <th>Count</th>
                                                <th>Percentage</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{
                                                var totalReasons = reasonData.Sum(r => (int)r.Count);
                                            }
                                            @foreach (var item in reasonData)
                                            {
                                                var percentage = totalReasons > 0 ? Math.Round((double)item.Count / totalReasons * 100, 1) : 0;
                                                <tr>
                                                    <td>@item.Reason</td>
                                                    <td>@item.Count</td>
                                                    <td>@percentage%</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No reason data available.</p>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Cleanup Tools Tab -->
    @if (Model.ActiveTab == "cleanup")
    {
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>Cleanup Recommendations</h5>
                    </div>
                    <div class="card-body">
                        <div class="list-group">
                            <div class="list-group-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>Jobs ready for archive (30+ days)</strong>
                                        <small class="text-muted d-block">Completed/cancelled jobs older than 30 days</small>
                                    </div>
                                    <span class="badge bg-warning">@(Model.CleanupRecommendations.GetValueOrDefault("EligibleForArchive30Days", 0))</span>
                                </div>
                            </div>
                            
                            <div class="list-group-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>Archive cleanup (1+ years)</strong>
                                        <small class="text-muted d-block">Archived jobs older than 1 year</small>
                                    </div>
                                    <span class="badge bg-danger">@(Model.CleanupRecommendations.GetValueOrDefault("ArchiveCleanup1Year", 0))</span>
                                </div>
                            </div>
                            
                            <div class="list-group-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>Deep cleanup (2+ years)</strong>
                                        <small class="text-muted d-block">Archived jobs older than 2 years</small>
                                    </div>
                                    <span class="badge bg-dark">@(Model.CleanupRecommendations.GetValueOrDefault("ArchiveCleanup2Years", 0))</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h5>Cleanup Actions</h5>
                    </div>
                    <div class="card-body">
                        <form method="post" asp-page-handler="AutoArchive" class="mb-3">
                            <div class="mb-3">
                                <label asp-for="CleanupInput.OlderThanDays" class="form-label">Auto-archive jobs older than:</label>
                                <select asp-for="CleanupInput.OlderThanDays" class="form-select">
                                    <option value="30">30 days</option>
                                    <option value="60">60 days</option>
                                    <option value="90">90 days</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-warning w-100"
                                    onclick="return confirm('This will archive all eligible jobs. Continue?')">
                                <i class="bi bi-archive"></i> Auto-Archive Old Jobs
                            </button>
                        </form>
                        
                        <form method="post" asp-page-handler="CleanupOldArchives">
                            <div class="mb-3">
                                <label asp-for="CleanupInput.ArchiveCleanupDays" class="form-label">Delete archived jobs older than:</label>
                                <select asp-for="CleanupInput.ArchiveCleanupDays" class="form-select">
                                    <option value="365">1 year</option>
                                    <option value="730">2 years</option>
                                    <option value="1095">3 years</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-danger w-100"
                                    onclick="return confirm('This will permanently delete old archived jobs. This cannot be undone. Continue?')">
                                <i class="bi bi-trash"></i> Delete Old Archives
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Archive Job Modal -->
<div class="modal fade" id="archiveJobModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="ArchiveJob">
                <div class="modal-header">
                    <h5 class="modal-title">Archive Job</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label asp-for="ArchiveJobInput.JobId" class="form-label">Job ID</label>
                        <input asp-for="ArchiveJobInput.JobId" class="form-control" required>
                        <span asp-validation-for="ArchiveJobInput.JobId" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="ArchiveJobInput.Reason" class="form-label">Archive Reason</label>
                        <select asp-for="ArchiveJobInput.Reason" class="form-select">
                            <option value="Manual Archive">Manual Archive</option>
                            <option value="Completed Job Cleanup">Completed Job Cleanup</option>
                            <option value="Data Management">Data Management</option>
                            <option value="Storage Optimization">Storage Optimization</option>
                        </select>
                        <span asp-validation-for="ArchiveJobInput.Reason" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Archive Job</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Bulk Archive Modal -->
<div class="modal fade" id="bulkArchiveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="BulkArchive" id="bulkArchiveForm">
                <div class="modal-header">
                    <h5 class="modal-title">Bulk Archive Jobs</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="selectedJobsList"></div>
                    <div class="mb-3">
                        <label asp-for="BulkArchiveInput.Reason" class="form-label">Archive Reason</label>
                        <select asp-for="BulkArchiveInput.Reason" class="form-select">
                            <option value="Bulk Archive">Bulk Archive</option>
                            <option value="Cleanup Operation">Cleanup Operation</option>
                            <option value="Maintenance">Maintenance</option>
                            <option value="Data Management">Data Management</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Archive Selected Jobs</button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Include the shared alert notifications *@
<partial name="_AlertNotifications" />

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        // Job selection functionality
        function toggleAllJobSelection() {
            const selectAll = document.getElementById('selectAll');
            const checkboxes = document.querySelectorAll('.job-checkbox');
            checkboxes.forEach(cb => cb.checked = selectAll.checked);
            updateBulkArchiveButton();
        }

        function updateBulkArchiveButton() {
            const checkedBoxes = document.querySelectorAll('.job-checkbox:checked');
            const bulkButton = document.querySelector('[data-bs-target="#bulkArchiveModal"]');
            if (bulkButton) {
                bulkButton.disabled = checkedBoxes.length === 0;
                bulkButton.textContent = `Bulk Archive Selected (${checkedBoxes.length})`;
            }
        }

        // Update bulk archive modal with selected jobs
        document.getElementById('bulkArchiveModal')?.addEventListener('show.bs.modal', function () {
            const checkedBoxes = document.querySelectorAll('.job-checkbox:checked');
            const jobIds = Array.from(checkedBoxes).map(cb => cb.value);
            
            // Update the list display
            const listContainer = document.getElementById('selectedJobsList');
            listContainer.innerHTML = `<p><strong>Selected Jobs:</strong> ${jobIds.length} jobs (IDs: ${jobIds.join(', ')})</p>`;
            
            // Clear existing hidden inputs
            const existingInputs = document.querySelectorAll('input[name="BulkArchiveInput.JobIds"]');
            existingInputs.forEach(input => input.remove());
            
            // Add hidden inputs for selected job IDs
            const form = document.getElementById('bulkArchiveForm');
            jobIds.forEach(id => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'BulkArchiveInput.JobIds';
                input.value = id;
                form.appendChild(input);
            });
        });

        // Archive individual job
        function archiveIndividualJob(jobId) {
            const modal = new bootstrap.Modal(document.getElementById('archiveJobModal'));
            document.querySelector('input[name="ArchiveJobInput.JobId"]').value = jobId;
            modal.show();
        }

        // View archived job details
        function viewArchivedJob(jobId) {
            // This could open a detailed view modal
            alert(`View details for archived job ${jobId} - Feature coming soon`);
        }

        // Initialize job checkbox listeners
        document.addEventListener('DOMContentLoaded', function() {
            const checkboxes = document.querySelectorAll('.job-checkbox');
            checkboxes.forEach(cb => {
                cb.addEventListener('change', updateBulkArchiveButton);
            });
            updateBulkArchiveButton();
        });
    </script>
}