@page
@model OpCentrix.Pages.Admin.LogsModel
@{
    ViewData["Title"] = "System Logs";
    Layout = "~/Pages/Admin/Shared/_AdminLayout.cshtml";
}

<div class="space-y-6">
    <!-- Header Section -->
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">System Logs</h1>
            <p class="mt-1 text-sm text-gray-600">View and manage application logs</p>
        </div>
        <div class="flex space-x-3">
            <a href="?handler=Refresh" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                ?? Refresh
            </a>
            <form method="post" asp-page-handler="ClearLogs" class="inline" onsubmit="return confirm('?? This will delete ALL log files. Are you sure?')">
                <button type="submit" class="inline-flex items-center px-3 py-2 border border-red-300 shadow-sm text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                    ??? Clear All Logs
                </button>
            </form>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <div class="bg-blue-50 rounded-lg p-4">
            <div class="flex items-center">
                <div class="text-blue-500 text-2xl mr-3">??</div>
                <div>
                    <p class="text-sm font-medium text-blue-600">Total Entries</p>
                    <p class="text-2xl font-bold text-blue-900">@Model.Statistics.TotalEntries.ToString("N0")</p>
                </div>
            </div>
        </div>
        
        <div class="bg-green-50 rounded-lg p-4">
            <div class="flex items-center">
                <div class="text-green-500 text-2xl mr-3">??</div>
                <div>
                    <p class="text-sm font-medium text-green-600">Today's Entries</p>
                    <p class="text-2xl font-bold text-green-900">@Model.Statistics.TodayEntries.ToString("N0")</p>
                </div>
            </div>
        </div>
        
        <div class="bg-red-50 rounded-lg p-4">
            <div class="flex items-center">
                <div class="text-red-500 text-2xl mr-3">?</div>
                <div>
                    <p class="text-sm font-medium text-red-600">Errors</p>
                    <p class="text-2xl font-bold text-red-900">@Model.Statistics.ErrorCount.ToString("N0")</p>
                </div>
            </div>
        </div>
        
        <div class="bg-gray-50 rounded-lg p-4">
            <div class="flex items-center">
                <div class="text-gray-500 text-2xl mr-3">??</div>
                <div>
                    <p class="text-sm font-medium text-gray-600">Log Size</p>
                    <p class="text-2xl font-bold text-gray-900">@Model.Statistics.TotalFileSizeFormatted</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Level Breakdown -->
    <div class="bg-white rounded-lg shadow p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Log Level Breakdown</h3>
        <div class="grid grid-cols-2 md:grid-cols-5 gap-4">
            <div class="text-center">
                <div class="text-2xl font-bold text-blue-600">@Model.Statistics.InformationCount</div>
                <div class="text-sm text-gray-600">Information</div>
            </div>
            <div class="text-center">
                <div class="text-2xl font-bold text-yellow-600">@Model.Statistics.WarningCount</div>
                <div class="text-sm text-gray-600">Warnings</div>
            </div>
            <div class="text-center">
                <div class="text-2xl font-bold text-red-600">@Model.Statistics.ErrorCount</div>
                <div class="text-sm text-gray-600">Errors</div>
            </div>
            <div class="text-center">
                <div class="text-2xl font-bold text-gray-600">@Model.Statistics.DebugCount</div>
                <div class="text-sm text-gray-600">Debug</div>
            </div>
            <div class="text-center">
                <div class="text-2xl font-bold text-red-800">@Model.Statistics.FatalCount</div>
                <div class="text-sm text-gray-600">Fatal</div>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="bg-white rounded-lg shadow p-6">
        <form method="get" class="space-y-4">
            <h3 class="text-lg font-medium text-gray-900">Filters</h3>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                    <label for="LevelFilter" class="block text-sm font-medium text-gray-700">Log Level</label>
                    <select asp-for="LevelFilter" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
                        <option value="">All Levels</option>
                        @foreach (var level in Model.LogLevels)
                        {
                            <option value="@level">@level</option>
                        }
                    </select>
                </div>
                
                <div>
                    <label for="SearchTerm" class="block text-sm font-medium text-gray-700">Search</label>
                    <input asp-for="SearchTerm" type="text" placeholder="Search log messages..." 
                           class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                </div>
                
                <div>
                    <label for="PageSize" class="block text-sm font-medium text-gray-700">Page Size</label>
                    <select asp-for="PageSize" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="200">200</option>
                    </select>
                </div>
            </div>
            
            <div class="flex space-x-3">
                <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    ?? Apply Filters
                </button>
                <a href="/Admin/Logs" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    ??? Clear Filters
                </a>
            </div>
        </form>
    </div>

    <!-- Log Entries -->
    <div class="bg-white rounded-lg shadow">
        <div class="px-6 py-4 border-b border-gray-200">
            <h3 class="text-lg font-medium text-gray-900">Log Entries (@Model.LogEntries.Count of @Model.Statistics.TotalEntries)</h3>
        </div>
        
        @if (Model.LogEntries.Any())
        {
            <div class="overflow-hidden">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Timestamp</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Level</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Message</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var entry in Model.LogEntries)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                    @Model.FormatTimestamp(entry.Timestamp)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @Model.GetLogLevelBadgeClass(entry.Level)">
                                        @entry.LevelIcon @entry.Level
                                    </span>
                                </td>
                                <td class="px-6 py-4 text-sm text-gray-900">
                                    <div class="max-w-3xl">
                                        <div class="font-medium">@Model.TruncateMessage(entry.Message, 150)</div>
                                        @if (!string.IsNullOrEmpty(entry.Exception))
                                        {
                                            <div class="text-red-600 text-xs mt-1 font-mono">@entry.Exception</div>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <div class="text-gray-400 text-6xl mb-4">??</div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No log entries found</h3>
                <p class="text-gray-600">Try adjusting your filters or check back later.</p>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6 rounded-lg shadow">
            <div class="flex-1 flex justify-between sm:hidden">
                @if (Model.HasPrevious)
                {
                    <a href="?CurrentPage=@(Model.CurrentPage - 1)&LevelFilter=@Model.LevelFilter&SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize" 
                       class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Previous
                    </a>
                }
                @if (Model.HasNext)
                {
                    <a href="?CurrentPage=@(Model.CurrentPage + 1)&LevelFilter=@Model.LevelFilter&SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize" 
                       class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Next
                    </a>
                }
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing page <span class="font-medium">@Model.CurrentPage</span> of <span class="font-medium">@Model.TotalPages</span>
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        @if (Model.HasPrevious)
                        {
                            <a href="?CurrentPage=@(Model.CurrentPage - 1)&LevelFilter=@Model.LevelFilter&SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize" 
                               class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                ? Previous
                            </a>
                        }
                        @if (Model.HasNext)
                        {
                            <a href="?CurrentPage=@(Model.CurrentPage + 1)&LevelFilter=@Model.LevelFilter&SearchTerm=@Model.SearchTerm&PageSize=@Model.PageSize" 
                               class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                Next ?
                            </a>
                        }
                    </nav>
                </div>
            </div>
        </div>
    }

    <!-- Log Files Download Section -->
    @if (Model.LogFiles.Any())
    {
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Download Log Files</h3>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                @foreach (var logFile in Model.LogFiles)
                {
                    <div class="border border-gray-200 rounded-lg p-4">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="font-medium text-gray-900">@logFile</p>
                                <p class="text-sm text-gray-600">Log file</p>
                            </div>
                            <a href="?handler=DownloadLog&fileName=@logFile" 
                               class="inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                ?? Download
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@if (TempData["Success"] != null)
{
    <div class="fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded z-50" role="alert">
        <strong class="font-bold">Success!</strong>
        <span class="block sm:inline">@TempData["Success"]</span>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="fixed top-4 right-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded z-50" role="alert">
        <strong class="font-bold">Error!</strong>
        <span class="block sm:inline">@TempData["Error"]</span>
    </div>
}

@section Scripts {
    <script>
        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            const alerts = document.querySelectorAll('[role="alert"]');
            alerts.forEach(alert => {
                alert.style.opacity = '0';
                setTimeout(() => alert.remove(), 300);
            });
        }, 5000);
    </script>
}
