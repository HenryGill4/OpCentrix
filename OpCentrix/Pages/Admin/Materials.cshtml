@page
@using OpCentrix.Models
@using OpCentrix.Services.Admin
@model OpCentrix.Pages.Admin.MaterialsModel
@{
    ViewData["Title"] = "Materials Management";
    Layout = "~/Pages/Admin/Shared/_AdminLayout.cshtml"; 
}

<div class="space-y-6">
    <!-- Header Section -->
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Materials Management</h1>
            <p class="mt-1 text-sm text-gray-600">Manage manufacturing materials, properties, and stock levels</p>
        </div>
        <div class="flex space-x-3">
            <button onclick="showCreateMaterialModal()" class="inline-flex items-center px-4 py-2 bg-blue-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-blue-700 active:bg-blue-900 focus:outline-none focus:border-blue-900 focus:ring ring-blue-300 transition ease-in-out duration-150">
                ➕ Add New Material
            </button>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div class="bg-white rounded-lg shadow p-6 border-l-4 border-blue-500">
            <div class="flex items-center">
                <div class="flex-1">
                    <h3 class="text-sm font-medium text-gray-500">Total Materials</h3>
                    <p class="text-2xl font-bold text-gray-900">@Model.TotalMaterials</p>
                </div>
                <div class="text-blue-500 text-3xl">🧪</div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6 border-l-4 border-green-500">
            <div class="flex items-center">
                <div class="flex-1">
                    <h3 class="text-sm font-medium text-gray-500">Active Materials</h3>
                    <p class="text-2xl font-bold text-gray-900">@Model.ActiveMaterials</p>
                </div>
                <div class="text-green-500 text-3xl">✅</div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6 border-l-4 border-purple-500">
            <div class="flex items-center">
                <div class="flex-1">
                    <h3 class="text-sm font-medium text-gray-500">Material Types</h3>
                    <p class="text-2xl font-bold text-gray-900">@Model.MaterialTypes.Count</p>
                </div>
                <div class="text-purple-500 text-3xl">🏷️</div>
            </div>
        </div>
        
        <div class="bg-white rounded-lg shadow p-6 border-l-4 border-amber-500">
            <div class="flex items-center">
                <div class="flex-1">
                    <h3 class="text-sm font-medium text-gray-500">Avg Cost/g</h3>
                    <p class="text-2xl font-bold text-gray-900">$@Model.AverageCostPerGram.ToString("F2")</p>
                </div>
                <div class="text-amber-500 text-3xl">💰</div>
            </div>
        </div>
    </div>

    <!-- Material Types Distribution -->
    @if (Model.MaterialTypeStatistics.Any())
    {
        <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Materials by Type</h3>
            <div class="grid grid-cols-2 md:grid-cols-5 gap-4">
                @foreach (var typeStats in Model.MaterialTypeStatistics.OrderByDescending(s => s.Value))
                {
                    <div class="text-center p-3 bg-gray-50 rounded-lg">
                        <div class="text-2xl font-bold @(typeStats.Key.ToLower() switch 
                        { 
                            "titanium" => "text-purple-600", 
                            "steel" => "text-gray-600", 
                            "aluminum" => "text-green-600", 
                            "nickel" => "text-orange-600", 
                            "cobalt" => "text-red-600",
                            "ceramic" => "text-blue-600",
                            _ => "text-gray-600" 
                        })">@typeStats.Value</div>
                        <div class="text-sm text-gray-600">@typeStats.Key</div>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Search and Filter Section -->
    <div class="bg-white rounded-lg shadow p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Search & Filter</h3>
        <form method="get" class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label class="block text-sm font-medium text-gray-700">Search</label>
                <input type="text" name="searchTerm" value="@Model.SearchTerm" placeholder="Material code, name, type..." 
                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
            </div>
            
            <div>
                <label class="block text-sm font-medium text-gray-700">Material Type</label>
                <select name="typeFilter" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    <option value="">All Types</option>
                    @foreach (var type in Model.MaterialTypes)
                    {
                        <option value="@type" selected="@(Model.TypeFilter == type)">@type</option>
                    }
                </select>
            </div>
            
            <div>
                <label class="block text-sm font-medium text-gray-700">Status</label>
                <select name="statusFilter" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    <option value="">All</option>
                    <option value="active" selected="@(Model.StatusFilter == "active")">Active</option>
                    <option value="inactive" selected="@(Model.StatusFilter == "inactive")">Inactive</option>
                </select>
            </div>
            
            <div class="flex items-end">
                <button type="submit" class="w-full px-4 py-2 bg-gray-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 focus:outline-none focus:border-gray-700 focus:ring ring-gray-300 transition ease-in-out duration-150">
                    🔍 Search
                </button>
            </div>
        </form>
    </div>

    <!-- Materials Table -->
    <div class="bg-white rounded-lg shadow overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
            <h3 class="text-lg font-medium text-gray-900">Materials (@Model.Materials.Count)</h3>
        </div>
        
        @if (Model.Materials.Any())
        {
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&typeFilter=@Model.TypeFilter&statusFilter=@Model.StatusFilter&sortBy=MaterialCode&sortDirection=@Model.GetNextSortDirection("MaterialCode")" 
                                   class="flex items-center hover:text-gray-700">
                                    Material Code @Model.GetSortIcon("MaterialCode")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&typeFilter=@Model.TypeFilter&statusFilter=@Model.StatusFilter&sortBy=MaterialName&sortDirection=@Model.GetNextSortDirection("MaterialName")" 
                                   class="flex items-center hover:text-gray-700">
                                    Material Name @Model.GetSortIcon("MaterialName")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&typeFilter=@Model.TypeFilter&statusFilter=@Model.StatusFilter&sortBy=MaterialType&sortDirection=@Model.GetNextSortDirection("MaterialType")" 
                                   class="flex items-center hover:text-gray-700">
                                    Type @Model.GetSortIcon("MaterialType")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Properties
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <a href="?searchTerm=@Model.SearchTerm&typeFilter=@Model.TypeFilter&statusFilter=@Model.StatusFilter&sortBy=CostPerGram&sortDirection=@Model.GetNextSortDirection("CostPerGram")" 
                                   class="flex items-center hover:text-gray-700">
                                    Cost/g @Model.GetSortIcon("CostPerGram")
                                </a>
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Status
                            </th>
                            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var material in Model.Materials)
                        {
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="w-3 h-3 rounded-full mr-3" style="background-color: @material.MaterialTypeColor"></div>
                                        <div class="text-sm font-medium text-gray-900">@material.MaterialCode</div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900">@material.MaterialName</div>
                                    <div class="text-sm text-gray-500">@(material.Description.Length > 50 ? material.Description.Substring(0, 47) + "..." : material.Description)</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium" style="background-color: @(material.MaterialTypeColor)15; color: @material.MaterialTypeColor;">
                                        @material.MaterialType
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-900">Density: @material.Density.ToString("F2") g/cm³</div>
                                    <div class="text-sm text-gray-500">Melting Point: @material.MeltingPointC.ToString("F0")°C</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900">$@material.CostPerGram.ToString("F3")</div>
                                    <div class="text-sm text-gray-500">per gram</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @(material.IsActive ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                        @(material.IsActive ? "Active" : "Inactive")
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <div class="flex items-center justify-end space-x-2">
                                        <button onclick="editMaterial(@material.Id, '@material.MaterialCode', '@material.MaterialName', '@material.MaterialType', '@Html.Raw(material.Description.Replace("'", "\\'"))', @material.Density, @material.MeltingPointC, @(material.IsActive ? "true" : "false"), @material.CostPerGram, @material.DefaultLayerThicknessMicrons, @material.DefaultLaserPowerPercent, @material.DefaultScanSpeedMmPerSec, '@Html.Raw(material.CompatibleMachineTypes.Replace("'", "\\'"))', '@Html.Raw(material.SafetyNotes.Replace("'", "\\'"))')" 
                                                class="text-blue-600 hover:text-blue-900" title="Edit Material">
                                            ✏️
                                        </button>
                                        
                                        <form method="post" asp-page-handler="ToggleMaterialStatus" class="inline">
                                            <input type="hidden" name="materialId" value="@material.Id" />
                                            <button type="submit" 
                                                    class="@(material.IsActive ? "text-orange-600 hover:text-orange-900" : "text-green-600 hover:text-green-900")" 
                                                    title="@(material.IsActive ? "Deactivate Material" : "Activate Material")"
                                                    onclick="return confirm('@(material.IsActive ? "Deactivate" : "Activate") material @material.MaterialCode?')">
                                                @(material.IsActive ? "🚫" : "✅")
                                            </button>
                                        </form>
                                        
                                        <form method="post" asp-page-handler="DeleteMaterial" class="inline">
                                            <input type="hidden" name="materialId" value="@material.Id" />
                                            <button type="submit" 
                                                    class="text-red-600 hover:text-red-900" 
                                                    title="Delete Material"
                                                    onclick="return confirm('Are you sure you want to delete material @material.MaterialCode? This action cannot be undone.')">
                                                🗑️
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-12">
                <div class="text-gray-400 text-6xl mb-4">🧪</div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No materials found</h3>
                <p class="text-gray-600 mb-4">Try adjusting your search criteria or add a new material.</p>
                <button onclick="showCreateMaterialModal()" class="inline-flex items-center px-4 py-2 bg-blue-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-blue-700">
                    ➕ Add First Material
                </button>
            </div>
        }
    </div>
</div>

<!-- Create/Edit Material Modal -->
<div id="materialModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
    <div class="relative top-10 mx-auto p-5 border w-[90%] max-w-4xl shadow-lg rounded-md bg-white max-h-[90vh] overflow-y-auto">
        <div class="mt-3">
            <h3 id="materialModalTitle" class="text-lg font-medium text-gray-900 mb-4">Add New Material</h3>
            
            <form method="post" id="materialForm">
                <input type="hidden" id="editingMaterialId" name="EditingMaterialId" value="" />
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Basic Information -->
                    <div class="space-y-4">
                        <h4 class="font-medium text-gray-900">Basic Information</h4>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Material Code*</label>
                            <input type="text" name="CreateMaterialRequest.MaterialCode" id="materialCode" required minlength="2" maxlength="50" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Material Name*</label>
                            <input type="text" name="CreateMaterialRequest.MaterialName" id="materialName" required minlength="3" maxlength="200" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Material Type*</label>
                            <select name="CreateMaterialRequest.MaterialType" id="materialType" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                                <option value="">Select Type</option>
                                <option value="Titanium">Titanium</option>
                                <option value="Steel">Steel</option>
                                <option value="Aluminum">Aluminum</option>
                                <option value="Nickel">Nickel</option>
                                <option value="Cobalt">Cobalt</option>
                                <option value="Ceramic">Ceramic</option>
                                <option value="Polymer">Polymer</option>
                                <option value="Composite">Composite</option>
                            </select>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Description</label>
                            <textarea name="CreateMaterialRequest.Description" id="description" maxlength="1000" rows="3" 
                                      class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"></textarea>
                        </div>
                    </div>

                    <!-- Physical Properties -->
                    <div class="space-y-4">
                        <h4 class="font-medium text-gray-900">Physical Properties</h4>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Density (g/cm³)*</label>
                                <input type="number" name="CreateMaterialRequest.Density" id="density" min="0.1" max="50" step="0.01" value="4.43" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Melting Point (°C)*</label>
                                <input type="number" name="CreateMaterialRequest.MeltingPointC" id="meltingPointC" min="100" max="5000" value="1660" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Cost per Gram ($)*</label>
                            <input type="number" name="CreateMaterialRequest.CostPerGram" id="costPerGram" min="0" max="1000" step="0.001" value="0.500" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Compatible Machine Types</label>
                            <input type="text" name="CreateMaterialRequest.CompatibleMachineTypes" id="compatibleMachineTypes" maxlength="500" value="SLS" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            <p class="text-xs text-gray-500 mt-1">Comma-separated list (e.g., SLS, EDM, CNC)</p>
                        </div>
                    </div>

                    <!-- Process Parameters -->
                    <div class="space-y-4">
                        <h4 class="font-medium text-gray-900">Default Process Parameters</h4>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Layer Thickness (µm)</label>
                                <input type="number" name="CreateMaterialRequest.DefaultLayerThicknessMicrons" id="defaultLayerThicknessMicrons" min="10" max="200" value="30" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700">Laser Power (%)</label>
                                <input type="number" name="CreateMaterialRequest.DefaultLaserPowerPercent" id="defaultLaserPowerPercent" min="10" max="100" value="85" 
                                       class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Scan Speed (mm/s)</label>
                            <input type="number" name="CreateMaterialRequest.DefaultScanSpeedMmPerSec" id="defaultScanSpeedMmPerSec" min="500" max="10000" value="1200" 
                                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Safety Notes</label>
                            <textarea name="CreateMaterialRequest.SafetyNotes" id="safetyNotes" maxlength="1000" rows="3" 
                                      class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500"></textarea>
                        </div>
                    </div>

                    <!-- Status -->
                    <div class="space-y-4">
                        <h4 class="font-medium text-gray-900">Status</h4>
                        
                        <div class="flex items-center">
                            <input type="checkbox" name="CreateMaterialRequest.IsActive" id="isActive" value="true" checked 
                                   class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                            <label for="isActive" class="ml-2 block text-sm text-gray-900">Active Material</label>
                            <input type="hidden" name="CreateMaterialRequest.IsActive" value="false" />
                        </div>
                    </div>
                </div>
                
                <div class="flex items-center justify-end space-x-2 mt-6 pt-6 border-t">
                    <button type="button" onclick="hideMaterialModal()" 
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Cancel
                    </button>
                    <button type="submit" id="materialSubmitBtn" 
                            class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Create Material
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@* Include the shared alert notifications *@
<partial name="_AlertNotifications" />

@section Scripts {
    <script>
        let isEditMode = false;

        function showCreateMaterialModal() {
            isEditMode = false;
            document.getElementById('materialModalTitle').textContent = 'Add New Material';
            document.getElementById('materialSubmitBtn').textContent = 'Create Material';
            document.getElementById('materialForm').action = '?handler=CreateMaterial';
            document.getElementById('editingMaterialId').value = '';
            
            // Clear form
            clearMaterialForm();
            
            document.getElementById('materialModal').classList.remove('hidden');
        }

        function editMaterial(id, materialCode, materialName, materialType, description, density, meltingPointC, isActive, costPerGram, defaultLayerThicknessMicrons, defaultLaserPowerPercent, defaultScanSpeedMmPerSec, compatibleMachineTypes, safetyNotes) {
            isEditMode = true;
            document.getElementById('materialModalTitle').textContent = 'Edit Material';
            document.getElementById('materialSubmitBtn').textContent = 'Update Material';
            document.getElementById('materialForm').action = '?handler=EditMaterial';
            document.getElementById('editingMaterialId').value = id;
            
            // Populate form
            document.getElementById('materialCode').value = materialCode;
            document.getElementById('materialName').value = materialName;
            document.getElementById('materialType').value = materialType;
            document.getElementById('description').value = description;
            document.getElementById('density').value = density;
            document.getElementById('meltingPointC').value = meltingPointC;
            document.getElementById('isActive').checked = isActive;
            document.getElementById('costPerGram').value = costPerGram;
            document.getElementById('defaultLayerThicknessMicrons').value = defaultLayerThicknessMicrons;
            document.getElementById('defaultLaserPowerPercent').value = defaultLaserPowerPercent;
            document.getElementById('defaultScanSpeedMmPerSec').value = defaultScanSpeedMmPerSec;
            document.getElementById('compatibleMachineTypes').value = compatibleMachineTypes;
            document.getElementById('safetyNotes').value = safetyNotes;
            
            document.getElementById('materialModal').classList.remove('hidden');
        }

        function hideMaterialModal() {
            document.getElementById('materialModal').classList.add('hidden');
        }

        function clearMaterialForm() {
            document.getElementById('materialCode').value = '';
            document.getElementById('materialName').value = '';
            document.getElementById('materialType').value = '';
            document.getElementById('description').value = '';
            document.getElementById('density').value = '4.43';
            document.getElementById('meltingPointC').value = '1660';
            document.getElementById('isActive').checked = true;
            document.getElementById('costPerGram').value = '0.500';
            document.getElementById('defaultLayerThicknessMicrons').value = '30';
            document.getElementById('defaultLaserPowerPercent').value = '85';
            document.getElementById('defaultScanSpeedMmPerSec').value = '1200';
            document.getElementById('compatibleMachineTypes').value = 'SLS';
            document.getElementById('safetyNotes').value = '';
        }

        // Close modals when clicking outside
        window.addEventListener('click', function(event) {
            const materialModal = document.getElementById('materialModal');
            
            if (event.target === materialModal) {
                hideMaterialModal();
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Escape to close modals
            if (e.key === 'Escape') {
                hideMaterialModal();
            }
            
            // Ctrl+N to create new material
            if (e.ctrlKey && e.key === 'n') {
                e.preventDefault();
                showCreateMaterialModal();
            }
        });

        // Form validation
        document.getElementById('materialForm').addEventListener('submit', function(e) {
            const materialCode = document.getElementById('materialCode').value.trim();
            const materialName = document.getElementById('materialName').value.trim();
            const materialType = document.getElementById('materialType').value.trim();
            
            if (!materialCode || !materialName || !materialType) {
                e.preventDefault();
                alert('Please fill in all required fields (Material Code, Material Name, and Material Type).');
                return false;
            }
            
            if (materialCode.length < 2) {
                e.preventDefault();
                alert('Material Code must be at least 2 characters long.');
                return false;
            }
        });
    </script>
}