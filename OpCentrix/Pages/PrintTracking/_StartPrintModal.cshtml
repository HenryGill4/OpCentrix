@model OpCentrix.Models.ViewModels.PrintStartViewModel

<!-- Print Start Modal -->
<div class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50" id="start-print-modal">
    <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <!-- Header -->
            <div class="flex items-center justify-between pb-4 border-b">
                <h3 class="text-lg font-semibold text-gray-900">Start Print Job</h3>
                <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

            <!-- Form -->
            <form hx-post="/PrintTracking?handler=StartPrint" 
                  hx-target="#modal-container" 
                  hx-swap="innerHTML"
                  class="mt-6 space-y-6">
                
                @Html.AntiForgeryToken()
                
                <!-- Operator Info -->
                <div class="bg-blue-50 p-4 rounded-lg">
                    <div class="flex items-center">
                        <svg class="w-5 h-5 text-blue-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                        </svg>
                        <span class="text-sm font-medium text-blue-900">Operator: @Model.OperatorName</span>
                    </div>
                </div>

                <!-- Printer Selection -->
                <div>
                    <label for="PrinterName" class="block text-sm font-medium text-gray-700 mb-2">
                        Printer <span class="text-red-500">*</span>
                    </label>
                    <select name="PrinterName" id="PrinterName" required 
                            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                            hx-get="/PrintTracking?handler=StartPrintModal" 
                            hx-target="#modal-container" 
                            hx-swap="innerHTML"
                            hx-trigger="change"
                            hx-include="this">
                        <option value="">Select Printer</option>
                        @foreach (var printer in Model.AvailablePrinters)
                        {
                            <option value="@printer" selected="@(printer == Model.PrinterName)">@printer</option>
                        }
                    </select>
                </div>

                <!-- Actual Start Time -->
                <div>
                    <label for="ActualStartTime" class="block text-sm font-medium text-gray-700 mb-2">
                        Actual Start Time <span class="text-red-500">*</span>
                    </label>
                    <input type="datetime-local" 
                           name="ActualStartTime" 
                           id="ActualStartTime" 
                           value="@Model.ActualStartTime.ToString("yyyy-MM-ddTHH:mm")" 
                           required
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    <p class="mt-1 text-xs text-gray-500">Auto-filled to current time, but can be edited if needed</p>
                </div>

                <!-- Associated Scheduled Job -->
                @if (Model.AvailableScheduledJobs.Any())
                {
                    <div>
                        <label for="AssociatedScheduledJobId" class="block text-sm font-medium text-gray-700 mb-2">
                            Link to Scheduled Job (Optional)
                        </label>
                        <select name="AssociatedScheduledJobId" id="AssociatedScheduledJobId" 
                                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">No scheduled job</option>
                            @foreach (var job in Model.AvailableScheduledJobs)
                            {
                                <option value="@job.Id">
                                    @job.PartNumber - @job.ScheduledStart.ToString("MM/dd HH:mm") to @job.ScheduledEnd.ToString("HH:mm")
                                </option>
                            }
                        </select>
                        <p class="mt-1 text-xs text-gray-500">Select if this print corresponds to a scheduled job</p>
                    </div>
                }

                <!-- Setup Notes -->
                <div>
                    <label for="SetupNotes" class="block text-sm font-medium text-gray-700 mb-2">
                        Setup Notes (Optional)
                    </label>
                    <textarea name="SetupNotes" 
                              id="SetupNotes" 
                              rows="3" 
                              placeholder="Any special setup requirements, material changes, or operator notes..."
                              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">@Model.SetupNotes</textarea>
                </div>

                <!-- Form Actions -->
                <div class="flex justify-end space-x-3 pt-6 border-t">
                    <button type="button" 
                            onclick="closeModal()" 
                            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 text-sm font-medium text-white bg-green-600 border border-transparent rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Start Print
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Handle form submission response
    document.body.addEventListener('htmx:afterRequest', function(event) {
        if (event.detail.xhr.responseURL.includes('StartPrint')) {
            try {
                const response = JSON.parse(event.detail.xhr.responseText);
                if (response.success) {
                    closeModal();
                    showToast(response.message, 'success');
                    refreshDashboard();
                } else {
                    showToast(response.message, 'error');
                }
            } catch (e) {
                // If not JSON response, it's likely the form with validation errors
                // Do nothing, let HTMX handle the swap
            }
        }
    });

    // Focus on printer dropdown when modal opens
    document.getElementById('PrinterName').focus();
</script>