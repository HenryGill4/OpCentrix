@using OpCentrix.ViewModels.PrintTracking
@using OpCentrix.Models
@model OpCentrix.ViewModels.PrintTracking.EmbeddedSchedulerViewModel

<!-- Enhanced Embedded Schedule View for Print Tracking with Dynamic Machines -->
<div class="bg-gray-50 rounded-lg p-4">
    <div class="flex items-center justify-between mb-4">
        <h4 class="text-sm font-medium text-gray-900">Production Schedule (Next 3 Days)</h4>
        <div class="flex items-center space-x-2">
            <span class="text-xs text-gray-500">
                @Model.Jobs.Count jobs across @Model.Machines.Count machines
            </span>
            <a href="/Scheduler" class="text-xs text-blue-600 hover:text-blue-500 flex items-center">
                View Full Schedule
                <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
            </a>
        </div>
    </div>

    @if (Model.Jobs.Count > 0 && Model.Machines.Any())
    {
        <!-- Enhanced Mini Schedule Grid -->
        <div class="space-y-3">
            @foreach (var machine in Model.Machines.Take(8))
            {
                var machineJobs = Model.Jobs.Where(j => j.MachineId == machine).OrderBy(j => j.ScheduledStart).ToList();
                var totalHours = machineJobs.Sum(j => j.EstimatedHours);
                var urgentJobs = machineJobs.Count(j => j.Priority <= 2);
                
                <div class="bg-white rounded border hover:shadow-md transition-shadow duration-200">
                    <!-- Enhanced Machine Header -->
                    <div class="px-3 py-2 bg-gray-100 border-b flex items-center justify-between">
                        <div class="flex items-center space-x-2">
                            <span class="text-sm font-medium text-gray-700">@machine</span>
                            @if (urgentJobs > 0)
                            {
                                <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                    @urgentJobs urgent
                                </span>
                            }
                        </div>
                        <div class="text-right">
                            <div class="text-xs text-gray-500">
                                @machineJobs.Count jobs | @totalHours.ToString("F1")h
                            </div>
                        </div>
                    </div>
                    
                    <!-- Jobs for this machine -->
                    <div class="p-3">
                        @if (machineJobs.Any())
                        {
                            <div class="space-y-2">
                                @foreach (var job in machineJobs.Take(5))
                                {
                                    var isRunning = job.Status == "In Progress" || job.Status == "Building";
                                    var isOverdue = job.ScheduledEnd < DateTime.Now && !isRunning;
                                    var isUpcoming = job.ScheduledStart <= DateTime.Now.AddHours(2) && job.Status == "Scheduled";
                                    
                                    <div class="flex items-center justify-between p-2 rounded text-xs @GetJobRowClasses(job.Status, isOverdue, isUpcoming)">
                                        <div class="flex-1 min-w-0">
                                            <div class="font-medium text-gray-900 truncate">
                                                @job.PartNumber
                                                @if (isRunning)
                                                {
                                                    <span class="ml-1 inline-flex items-center">
                                                        <svg class="w-3 h-3 text-green-500 animate-pulse" fill="currentColor" viewBox="0 0 20 20">
                                                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"></path>
                                                        </svg>
                                                    </span>
                                                }
                                            </div>
                                            <div class="text-gray-500 truncate">
                                                @GetTimeDisplayText(job, isRunning)
                                            </div>
                                            @if (job.Quantity > 1)
                                            {
                                                <div class="text-gray-400">Qty: @job.Quantity</div>
                                            }
                                        </div>
                                        <div class="text-right ml-2 flex-shrink-0">
                                            <div class="flex items-center space-x-1">
                                                <span class="@GetPriorityBadgeClasses(job.Priority) px-2 py-1 rounded-full text-xs font-medium">
                                                    P@job.Priority
                                                </span>
                                                @if (isOverdue)
                                                {
                                                    <span class="inline-flex items-center">
                                                        <svg class="w-3 h-3 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                                                            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                                                        </svg>
                                                    </span>
                                                }
                                            </div>
                                            <div class="text-gray-500 mt-1">
                                                @job.EstimatedHours.ToString("F1")h
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            
                            @if (machineJobs.Count > 5)
                            {
                                <div class="mt-2 pt-2 border-t border-gray-200 text-center">
                                    <a href="/Scheduler?machine=@machine" class="text-xs text-blue-600 hover:text-blue-500">
                                        +@(machineJobs.Count - 5) more jobs ? View in scheduler
                                    </a>
                                </div>
                            }
                            
                            <!-- Quick Actions for this machine -->
                            <div class="mt-3 pt-2 border-t border-gray-200 flex space-x-2">
                                <button data-action="start-print" data-printer="@machine" 
                                        class="flex-1 text-xs px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200">
                                    <svg class="w-3 h-3 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                    </svg>
                                    Start
                                </button>
                                @if (machineJobs.Any(j => j.Status == "In Progress"))
                                {
                                    <button data-action="complete-print" data-printer="@machine" 
                                            class="flex-1 text-xs px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700 transition-colors duration-200">
                                        <svg class="w-3 h-3 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        Complete
                                    </button>
                                }
                                <a href="/Scheduler?machine=@machine" 
                                   class="text-xs px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors duration-200">
                                    <svg class="w-3 h-3 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    Schedule
                                </a>
                            </div>
                        }
                        else
                        {
                            <!-- No jobs for this machine -->
                            <div class="text-center py-4">
                                <svg class="mx-auto h-8 w-8 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <p class="text-xs text-gray-500 mt-1">No scheduled jobs</p>
                                <button data-action="start-print" data-printer="@machine" 
                                        class="mt-2 text-xs px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200">
                                    Start New Print
                                </button>
                            </div>
                        }
                    </div>
                </div>
            }
            
            @if (Model.Machines.Count > 8)
            {
                <div class="text-center py-2">
                    <a href="/Scheduler" class="text-sm text-blue-600 hover:text-blue-500">
                        +@(Model.Machines.Count - 8) more machines ? View full scheduler
                    </a>
                </div>
            }
        </div>
        
        <!-- Summary Statistics -->
        <div class="mt-4 pt-4 border-t border-gray-200">
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
                <div>
                    <div class="text-lg font-semibold text-gray-900">@Model.Jobs.Count</div>
                    <div class="text-xs text-gray-500">Total Jobs</div>
                </div>
                <div>
                    <div class="text-lg font-semibold text-blue-600">@Model.Jobs.Count(j => j.Status == "In Progress")</div>
                    <div class="text-xs text-gray-500">Active</div>
                </div>
                <div>
                    <div class="text-lg font-semibold text-red-600">@Model.Jobs.Count(j => j.Priority <= 2)</div>
                    <div class="text-xs text-gray-500">High Priority</div>
                </div>
                <div>
                    <div class="text-lg font-semibold text-gray-600">@Model.Jobs.Sum(j => j.EstimatedHours).ToString("F1")h</div>
                    <div class="text-xs text-gray-500">Total Hours</div>
                </div>
            </div>
        </div>
    }
    else if (Model.Machines.Any())
    {
        <!-- No jobs but machines exist -->
        <div class="text-center py-8">
            <svg class="mx-auto h-12 w-12 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">No Scheduled Jobs</h3>
            <p class="mt-1 text-sm text-gray-500">No jobs scheduled for the next 3 days across @Model.Machines.Count machines.</p>
            <div class="mt-6">
                <a href="/Scheduler" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Schedule New Job
                </a>
            </div>
        </div>
    }
    else
    {
        <!-- No machines configured -->
        <div class="text-center py-8">
            <svg class="mx-auto h-12 w-12 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 11.172V5l-1-1z"></path>
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">No Machines Configured</h3>
            <p class="mt-1 text-sm text-gray-500">Configure machines to view scheduled jobs.</p>
            <div class="mt-6">
                <a href="/Admin/Machines" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                    Configure Machines
                </a>
            </div>
        </div>
    }
</div>

@functions {
    private string GetJobRowClasses(string status, bool isOverdue, bool isUpcoming)
    {
        if (status == "In Progress")
            return "bg-green-50 border border-green-200";
        
        if (isOverdue)
            return "bg-red-50 border border-red-200";
            
        if (isUpcoming)
            return "bg-yellow-50 border border-yellow-200";
            
        return "bg-gray-50 border border-gray-200";
    }

    private string GetPriorityBadgeClasses(int priority)
    {
        return priority switch
        {
            1 => "bg-red-100 text-red-800",
            2 => "bg-orange-100 text-orange-800",
            3 => "bg-yellow-100 text-yellow-800",
            4 => "bg-blue-100 text-blue-800",
            5 => "bg-green-100 text-green-800",
            _ => "bg-gray-100 text-gray-800"
        };
    }

    private string GetTimeDisplayText(Job job, bool isRunning)
    {
        if (isRunning && job.ActualStart.HasValue)
        {
            var elapsed = DateTime.Now - job.ActualStart.Value;
            return $"Running {elapsed.TotalHours:F1}h / {job.EstimatedHours:F1}h";
        }
        
        if (job.ScheduledStart.Date == DateTime.Today)
        {
            return $"Today {job.ScheduledStart:HH:mm} - {job.ScheduledEnd:HH:mm}";
        }
        
        return $"{job.ScheduledStart:MM/dd HH:mm} - {job.ScheduledEnd:HH:mm}";
    }
}