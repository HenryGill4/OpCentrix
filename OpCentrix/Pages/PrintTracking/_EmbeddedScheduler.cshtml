@model OpCentrix.ViewModels.Shared.EmbeddedSchedulerViewModel

<!-- Embedded Schedule View for Print Tracking -->
<div class="bg-gray-50 rounded-lg p-4">
    <div class="flex items-center justify-between mb-4">
        <h4 class="text-sm font-medium text-gray-900">Production Schedule (Next 3 Days)</h4>
        <a href="/Scheduler" class="text-xs text-blue-600 hover:text-blue-500">View Full Schedule ?</a>
    </div>

    @if (Model.Jobs.Count > 0)
    {
        <!-- Mini Schedule Grid -->
        <div class="space-y-3">
            @foreach (var machine in Model.Machines)
            {
                <div class="bg-white rounded border">
                    <!-- Machine Header -->
                    <div class="px-3 py-2 bg-gray-100 border-b flex items-center justify-between">
                        <span class="text-sm font-medium text-gray-700">@machine</span>
                        <span class="text-xs text-gray-500">
                            @Model.Jobs.Where(j => j.MachineId == machine).Count() jobs
                        </span>
                    </div>
                    
                    <!-- Jobs for this machine -->
                    <div class="p-3">
                        @{
                            var machineJobs = Model.Jobs.Where(j => j.MachineId == machine).Take(5).ToList();
                        }
                        
                        @if (machineJobs.Any())
                        {
                            <div class="space-y-2">
                                @foreach (var job in machineJobs)
                                {
                                    <div class="flex items-center justify-between p-2 bg-gray-50 rounded text-xs">
                                        <div class="flex-1">
                                            <div class="font-medium text-gray-900">@job.PartNumber</div>
                                            <div class="text-gray-500">
                                                @job.ScheduledStart.ToString("MM/dd HH:mm") - @job.ScheduledEnd.ToString("HH:mm")
                                            </div>
                                        </div>
                                        <div class="text-right">
                                            <span class="@(job.Priority <= 2 ? "bg-red-100 text-red-800" : 
                                                         job.Priority <= 3 ? "bg-yellow-100 text-yellow-800" : 
                                                         "bg-green-100 text-green-800") px-2 py-1 rounded-full text-xs font-medium">
                                                P@job.Priority
                                            </span>
                                            <div class="text-gray-500 mt-1">
                                                @job.EstimatedHours.ToString("F1")h
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            
                            @if (Model.Jobs.Where(j => j.MachineId == machine).Count() > 5)
                            {
                                <div class="mt-2 text-center">
                                    <span class="text-xs text-gray-500">
                                        +@(Model.Jobs.Where(j => j.MachineId == machine).Count() - 5) more jobs
                                    </span>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center py-3 text-xs text-gray-500">
                                No scheduled jobs
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <!-- Quick Stats -->
        <div class="mt-4 grid grid-cols-3 gap-3">
            <div class="bg-white rounded p-3 text-center">
                <div class="text-lg font-semibold text-gray-900">@Model.Jobs.Count</div>
                <div class="text-xs text-gray-500">Total Jobs</div>
            </div>
            <div class="bg-white rounded p-3 text-center">
                <div class="text-lg font-semibold text-gray-900">@Model.Jobs.Where(j => j.Status == "Scheduled").Count()</div>
                <div class="text-xs text-gray-500">Scheduled</div>
            </div>
            <div class="bg-white rounded p-3 text-center">
                <div class="text-lg font-semibold text-gray-900">@Model.Jobs.Where(j => j.Priority <= 2).Count()</div>
                <div class="text-xs text-gray-500">High Priority</div>
            </div>
        </div>
    }
    else
    {
        <!-- No Jobs State -->
        <div class="text-center py-8">
            <svg class="w-12 h-12 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <h4 class="text-sm font-medium text-gray-900 mb-1">No Scheduled Jobs</h4>
            <p class="text-xs text-gray-500">No jobs scheduled for the next 3 days</p>
            @{
                var userRole = ViewContext.HttpContext.User.FindFirst("Role")?.Value;
            }
            @if (userRole == "Admin" || userRole == "Manager" || userRole == "Scheduler")
            {
                <a href="/Scheduler" class="mt-3 inline-flex items-center px-3 py-1 border border-transparent text-xs font-medium rounded text-white bg-blue-600 hover:bg-blue-700">
                    Add Jobs
                </a>
            }
        </div>
    }
</div>