@model OpCentrix.Models.ViewModels.PrintTrackingDashboardViewModel

<!-- Print Tracking Dashboard -->
<div class="space-y-6">
    <!-- Quick Stats -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-6 w-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Active Builds</dt>
                            <dd class="text-lg font-medium text-gray-900">@Model.ActiveBuilds.Count</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-6 w-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Completed Today</dt>
                            <dd class="text-lg font-medium text-gray-900">@Model.RecentCompletedBuilds.Count</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-6 w-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                        </svg>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Total Hours Today</dt>
                            <dd class="text-lg font-medium text-gray-900">@Model.HoursToday.Values.Sum().ToString("F1")</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="p-5">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-6 w-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                    </div>
                    <div class="ml-5 w-0 flex-1">
                        <dl>
                            <dt class="text-sm font-medium text-gray-500 truncate">Delays Today</dt>
                            <dd class="text-lg font-medium text-gray-900">@Model.TotalDelaysToday</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Schedule Overview for Printer Operators -->
    <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg leading-6 font-medium text-gray-900">Today's Schedule Overview</h3>
                <button onclick="toggleScheduleView()" 
                        class="text-sm text-blue-600 hover:text-blue-500">
                    <span id="schedule-toggle-text">Show Details</span>
                    <svg id="schedule-chevron" class="w-4 h-4 inline ml-1 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
            </div>

            <!-- Embedded Schedule View -->
            <div id="schedule-overview" class="hidden">
                <div class="border rounded-lg overflow-hidden">
                    <div hx-get="/Scheduler?handler=EmbeddedView" 
                         hx-trigger="revealed, every 5m"
                         hx-target="this"
                         hx-swap="innerHTML">
                        <div class="p-4 text-center text-gray-500">
                            <svg class="animate-spin h-5 w-5 mx-auto mb-2" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                            Loading schedule...
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Schedule Summary -->
            <div id="schedule-summary" class="grid grid-cols-1 md:grid-cols-3 gap-4">
                @foreach (var printer in new[] { "TI1", "TI2", "INC" })
                {
                    var activeCount = Model.ActiveJobsByPrinter.GetValueOrDefault(printer, 0);
                    var hoursToday = Model.HoursToday.GetValueOrDefault(printer, 0);
                    
                    <div class="border rounded-lg p-4">
                        <div class="flex items-center justify-between">
                            <h4 class="font-medium text-gray-900">@printer</h4>
                            @if (activeCount > 0)
                            {
                                <span class="px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800">Active</span>
                            }
                            else
                            {
                                <span class="px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800">Idle</span>
                            }
                        </div>
                        <div class="mt-2 text-sm text-gray-600">
                            <div>Hours today: @hoursToday.ToString("F1")</div>
                            @if (activeCount > 0)
                            {
                                <div>Active builds: @activeCount</div>
                            }
                        </div>
                        <div class="mt-3 flex space-x-2">
                            <button onclick="openStartPrintModal('@printer')" 
                                    class="flex-1 text-xs px-2 py-1 bg-green-600 text-white rounded hover:bg-green-700">
                                Start Print
                            </button>
                            @if (activeCount > 0)
                            {
                                <button onclick="openPostPrintModal(null, '@printer')" 
                                        class="flex-1 text-xs px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700">
                                    Complete
                                </button>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Active Builds -->
    @if (Model.ActiveBuilds.Any())
    {
        <div class="bg-white shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Active Builds</h3>
                <div class="space-y-4">
                    @foreach (var build in Model.ActiveBuilds)
                    {
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center space-x-4">
                                    <div class="flex-shrink-0">
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                            @build.PrinterName
                                        </span>
                                    </div>
                                    <div>
                                        <h4 class="text-sm font-medium text-gray-900">Build #@build.BuildId</h4>
                                        <p class="text-sm text-gray-500">
                                            Started: @build.ActualStartTime.ToString("MM/dd HH:mm") by @(build.User?.FullName ?? "Unknown")
                                        </p>
                                    </div>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <span class="text-sm text-gray-500">
                                        @((DateTime.Now - build.ActualStartTime).TotalHours.ToString("F1"))h
                                    </span>
                                    <button onclick="openPostPrintModal(@build.BuildId)" 
                                            class="inline-flex items-center px-3 py-1 border border-transparent text-xs leading-4 font-medium rounded-md text-white bg-red-600 hover:bg-red-700">
                                        Complete
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

    <!-- Recent Activity -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Recent Completed Builds -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Recent Completed</h3>
                @if (Model.RecentCompletedBuilds.Any())
                {
                    <div class="space-y-3">
                        @foreach (var build in Model.RecentCompletedBuilds.Take(5))
                        {
                            <div class="flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0">
                                <div>
                                    <div class="text-sm font-medium text-gray-900">#@build.BuildId - @build.PrinterName</div>
                                    <div class="text-xs text-gray-500">
                                        @(build.CompletedAt?.ToString("HH:mm") ?? "Unknown") 
                                        (@(build.PrintDuration?.TotalHours.ToString("F1") ?? "?")h)
                                    </div>
                                </div>
                                <span class="px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800">
                                    @build.Status
                                </span>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-sm text-gray-500">No completed builds today</p>
                }
            </div>
        </div>

        <!-- Recent Delays -->
        <div class="bg-white shadow rounded-lg">
            <div class="px-4 py-5 sm:p-6">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Recent Delays</h3>
                @if (Model.RecentDelays.Any())
                {
                    <div class="space-y-3">
                        @foreach (var delay in Model.RecentDelays.Take(5))
                        {
                            <div class="flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0">
                                <div>
                                    <div class="text-sm font-medium text-gray-900">@delay.DelayReason</div>
                                    <div class="text-xs text-gray-500">
                                        Build #@delay.BuildId - @delay.DelayDuration min
                                    </div>
                                </div>
                                <span class="px-2 py-1 text-xs font-medium rounded-full bg-yellow-100 text-yellow-800">
                                    @delay.CreatedAt.ToString("HH:mm")
                                </span>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-sm text-gray-500">No delays recorded today</p>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function toggleScheduleView() {
        const overview = document.getElementById('schedule-overview');
        const summary = document.getElementById('schedule-summary');
        const toggleText = document.getElementById('schedule-toggle-text');
        const chevron = document.getElementById('schedule-chevron');
        
        if (overview.classList.contains('hidden')) {
            overview.classList.remove('hidden');
            summary.classList.add('hidden');
            toggleText.textContent = 'Show Summary';
            chevron.classList.add('rotate-180');
        } else {
            overview.classList.add('hidden');
            summary.classList.remove('hidden');
            toggleText.textContent = 'Show Details';
            chevron.classList.remove('rotate-180');
        }
    }
</script>